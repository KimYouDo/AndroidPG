<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:m="http://schemas.microsoft.com/office/2004/12/omml"
xmlns="http://www.w3.org/TR/REC-html40">

<head>

<meta http-equiv="Expires" content="0">
<META http-equiv="Cache-Control" content="no=cache">
<meta http-equiv="Pragma" content="no-cache">


<meta http-equiv=Content-Type content="text/html; charset=ks_c_5601-1987">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 15">
<meta name=Originator content="Microsoft Word 15">
<link rel=File-List href="제5주_프래그먼트.files/filelist.xml">
<link rel=Edit-Time-Data href="제5주_프래그먼트.files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>정충교</o:Author>
  <o:LastAuthor>Su Yong Lee</o:LastAuthor>
  <o:Revision>17</o:Revision>
  <o:TotalTime>7419</o:TotalTime>
  <o:Created>2017-04-01T13:57:00Z</o:Created>
  <o:LastSaved>2017-04-05T07:57:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>3012</o:Words>
  <o:Characters>17174</o:Characters>
  <o:Lines>143</o:Lines>
  <o:Paragraphs>40</o:Paragraphs>
  <o:CharactersWithSpaces>20146</o:CharactersWithSpaces>
  <o:Version>16.00</o:Version>
 </o:DocumentProperties>
 <o:OfficeDocumentSettings>
  <o:AllowPNG/>
 </o:OfficeDocumentSettings>
</xml><![endif]-->
<link rel=themeData href="제5주_프래그먼트.files/themedata.thmx">
<link rel=colorSchemeMapping href="제5주_프래그먼트.files/colorschememapping.xml">
<!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:Zoom>120</w:Zoom>
  <w:TrackMoves>false</w:TrackMoves>
  <w:TrackFormatting/>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>2</w:DisplayVerticalDrawingGridEvery>
  <w:ValidateAgainstSchemas/>
  <w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>
  <w:IgnoreMixedContent>false</w:IgnoreMixedContent>
  <w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>
  <w:DoNotPromoteQF/>
  <w:LidThemeOther>EN-US</w:LidThemeOther>
  <w:LidThemeAsian>KO</w:LidThemeAsian>
  <w:LidThemeComplexScript>X-NONE</w:LidThemeComplexScript>
  <w:Compatibility>
   <w:SpaceForUL/>
   <w:BalanceSingleByteDoubleByteWidth/>
   <w:DoNotLeaveBackslashAlone/>
   <w:ULTrailSpace/>
   <w:DoNotExpandShiftReturn/>
   <w:AdjustLineHeightInTable/>
   <w:BreakWrappedTables/>
   <w:SnapToGridInCell/>
   <w:WrapTextWithPunct/>
   <w:UseAsianBreakRules/>
   <w:DontGrowAutofit/>
   <w:SplitPgBreakAndParaMark/>
   <w:EnableOpenTypeKerning/>
   <w:DontFlipMirrorIndents/>
   <w:OverrideTableStyleHps/>
   <w:UseFELayout/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
  <m:mathPr>
   <m:mathFont m:val="Cambria Math"/>
   <m:brkBin m:val="before"/>
   <m:brkBinSub m:val="&#45;-"/>
   <m:smallFrac m:val="off"/>
   <m:dispDef/>
   <m:lMargin m:val="0"/>
   <m:rMargin m:val="0"/>
   <m:defJc m:val="centerGroup"/>
   <m:wrapIndent m:val="1440"/>
   <m:intLim m:val="subSup"/>
   <m:naryLim m:val="undOvr"/>
  </m:mathPr></w:WordDocument>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:LatentStyles DefLockedState="false" DefUnhideWhenUsed="false"
  DefSemiHidden="false" DefQFormat="false" DefPriority="99"
  LatentStyleCount="374">
  <w:LsdException Locked="false" Priority="0" QFormat="true" Name="Normal"/>
  <w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 1"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="heading 2"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="heading 3"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="heading 4"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="heading 5"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="heading 6"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="heading 7"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="heading 8"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="heading 9"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 5"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 6"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 7"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 8"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 9"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 1"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 2"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 3"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 4"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 5"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 6"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 7"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 8"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 9"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Normal Indent"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="footnote text"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="annotation text"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="header"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="footer"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index heading"/>
  <w:LsdException Locked="false" Priority="35" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="caption"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="table of figures"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="envelope address"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="envelope return"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="footnote reference"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="annotation reference"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="line number"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="page number"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="endnote reference"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="endnote text"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="table of authorities"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="macro"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="toa heading"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Bullet"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Number"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List 5"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Bullet 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Bullet 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Bullet 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Bullet 5"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Number 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Number 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Number 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Number 5"/>
  <w:LsdException Locked="false" Priority="10" QFormat="true" Name="Title"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Closing"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Signature"/>
  <w:LsdException Locked="false" Priority="1" SemiHidden="true"
   UnhideWhenUsed="true" Name="Default Paragraph Font"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Body Text"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Body Text Indent"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Continue"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Continue 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Continue 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Continue 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Continue 5"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Message Header"/>
  <w:LsdException Locked="false" Priority="11" QFormat="true" Name="Subtitle"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Salutation"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Date"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Body Text First Indent"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Body Text First Indent 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Note Heading"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Body Text 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Body Text 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Body Text Indent 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Body Text Indent 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Block Text"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Hyperlink"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="FollowedHyperlink"/>
  <w:LsdException Locked="false" Priority="22" QFormat="true" Name="Strong"/>
  <w:LsdException Locked="false" Priority="20" QFormat="true" Name="Emphasis"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Document Map"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Plain Text"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="E-mail Signature"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Top of Form"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Bottom of Form"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Normal (Web)"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Acronym"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Address"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Cite"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Code"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Definition"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Keyboard"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Preformatted"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Sample"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Typewriter"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Variable"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="annotation subject"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="No List"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Outline List 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Outline List 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Outline List 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Simple 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Simple 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Simple 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Classic 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Classic 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Classic 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Classic 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Colorful 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Colorful 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Colorful 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Columns 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Columns 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Columns 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Columns 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Columns 5"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Grid 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Grid 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Grid 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Grid 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Grid 5"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Grid 6"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Grid 7"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Grid 8"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table List 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table List 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table List 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table List 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table List 5"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table List 6"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table List 7"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table List 8"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table 3D effects 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table 3D effects 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table 3D effects 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Contemporary"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Elegant"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Professional"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Subtle 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Subtle 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Web 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Web 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Balloon Text"/>
  <w:LsdException Locked="false" Priority="39" Name="Table Grid"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Theme"/>
  <w:LsdException Locked="false" SemiHidden="true" Name="Placeholder Text"/>
  <w:LsdException Locked="false" Priority="1" QFormat="true" Name="No Spacing"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 1"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 1"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 1"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 1"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 1"/>
  <w:LsdException Locked="false" SemiHidden="true" Name="Revision"/>
  <w:LsdException Locked="false" Priority="34" QFormat="true"
   Name="List Paragraph"/>
  <w:LsdException Locked="false" Priority="29" QFormat="true" Name="Quote"/>
  <w:LsdException Locked="false" Priority="30" QFormat="true"
   Name="Intense Quote"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 1"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 1"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 1"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 1"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 1"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 1"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 2"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 2"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 2"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 2"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 2"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 2"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 2"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 2"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 2"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 2"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 2"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 3"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 3"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 3"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 3"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 3"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 3"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 3"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 3"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 3"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 3"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 3"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 4"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 4"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 4"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 4"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 4"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 4"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 4"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 4"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 4"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 4"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 4"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 5"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 5"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 5"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 5"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 5"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 5"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 5"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 5"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 5"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 5"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 5"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 6"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 6"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 6"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 6"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 6"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 6"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 6"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 6"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 6"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 6"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 6"/>
  <w:LsdException Locked="false" Priority="19" QFormat="true"
   Name="Subtle Emphasis"/>
  <w:LsdException Locked="false" Priority="21" QFormat="true"
   Name="Intense Emphasis"/>
  <w:LsdException Locked="false" Priority="31" QFormat="true"
   Name="Subtle Reference"/>
  <w:LsdException Locked="false" Priority="32" QFormat="true"
   Name="Intense Reference"/>
  <w:LsdException Locked="false" Priority="33" QFormat="true" Name="Book Title"/>
  <w:LsdException Locked="false" Priority="37" SemiHidden="true"
   UnhideWhenUsed="true" Name="Bibliography"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="TOC Heading"/>
  <w:LsdException Locked="false" Priority="41" Name="Plain Table 1"/>
  <w:LsdException Locked="false" Priority="42" Name="Plain Table 2"/>
  <w:LsdException Locked="false" Priority="43" Name="Plain Table 3"/>
  <w:LsdException Locked="false" Priority="44" Name="Plain Table 4"/>
  <w:LsdException Locked="false" Priority="45" Name="Plain Table 5"/>
  <w:LsdException Locked="false" Priority="40" Name="Grid Table Light"/>
  <w:LsdException Locked="false" Priority="46" Name="Grid Table 1 Light"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark"/>
  <w:LsdException Locked="false" Priority="51" Name="Grid Table 6 Colorful"/>
  <w:LsdException Locked="false" Priority="52" Name="Grid Table 7 Colorful"/>
  <w:LsdException Locked="false" Priority="46"
   Name="Grid Table 1 Light Accent 1"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 1"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 1"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 1"/>
  <w:LsdException Locked="false" Priority="51"
   Name="Grid Table 6 Colorful Accent 1"/>
  <w:LsdException Locked="false" Priority="52"
   Name="Grid Table 7 Colorful Accent 1"/>
  <w:LsdException Locked="false" Priority="46"
   Name="Grid Table 1 Light Accent 2"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 2"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 2"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 2"/>
  <w:LsdException Locked="false" Priority="51"
   Name="Grid Table 6 Colorful Accent 2"/>
  <w:LsdException Locked="false" Priority="52"
   Name="Grid Table 7 Colorful Accent 2"/>
  <w:LsdException Locked="false" Priority="46"
   Name="Grid Table 1 Light Accent 3"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 3"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 3"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 3"/>
  <w:LsdException Locked="false" Priority="51"
   Name="Grid Table 6 Colorful Accent 3"/>
  <w:LsdException Locked="false" Priority="52"
   Name="Grid Table 7 Colorful Accent 3"/>
  <w:LsdException Locked="false" Priority="46"
   Name="Grid Table 1 Light Accent 4"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 4"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 4"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 4"/>
  <w:LsdException Locked="false" Priority="51"
   Name="Grid Table 6 Colorful Accent 4"/>
  <w:LsdException Locked="false" Priority="52"
   Name="Grid Table 7 Colorful Accent 4"/>
  <w:LsdException Locked="false" Priority="46"
   Name="Grid Table 1 Light Accent 5"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 5"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 5"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 5"/>
  <w:LsdException Locked="false" Priority="51"
   Name="Grid Table 6 Colorful Accent 5"/>
  <w:LsdException Locked="false" Priority="52"
   Name="Grid Table 7 Colorful Accent 5"/>
  <w:LsdException Locked="false" Priority="46"
   Name="Grid Table 1 Light Accent 6"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 6"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 6"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 6"/>
  <w:LsdException Locked="false" Priority="51"
   Name="Grid Table 6 Colorful Accent 6"/>
  <w:LsdException Locked="false" Priority="52"
   Name="Grid Table 7 Colorful Accent 6"/>
  <w:LsdException Locked="false" Priority="46" Name="List Table 1 Light"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark"/>
  <w:LsdException Locked="false" Priority="51" Name="List Table 6 Colorful"/>
  <w:LsdException Locked="false" Priority="52" Name="List Table 7 Colorful"/>
  <w:LsdException Locked="false" Priority="46"
   Name="List Table 1 Light Accent 1"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 1"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 1"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 1"/>
  <w:LsdException Locked="false" Priority="51"
   Name="List Table 6 Colorful Accent 1"/>
  <w:LsdException Locked="false" Priority="52"
   Name="List Table 7 Colorful Accent 1"/>
  <w:LsdException Locked="false" Priority="46"
   Name="List Table 1 Light Accent 2"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 2"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 2"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 2"/>
  <w:LsdException Locked="false" Priority="51"
   Name="List Table 6 Colorful Accent 2"/>
  <w:LsdException Locked="false" Priority="52"
   Name="List Table 7 Colorful Accent 2"/>
  <w:LsdException Locked="false" Priority="46"
   Name="List Table 1 Light Accent 3"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 3"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 3"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 3"/>
  <w:LsdException Locked="false" Priority="51"
   Name="List Table 6 Colorful Accent 3"/>
  <w:LsdException Locked="false" Priority="52"
   Name="List Table 7 Colorful Accent 3"/>
  <w:LsdException Locked="false" Priority="46"
   Name="List Table 1 Light Accent 4"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 4"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 4"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 4"/>
  <w:LsdException Locked="false" Priority="51"
   Name="List Table 6 Colorful Accent 4"/>
  <w:LsdException Locked="false" Priority="52"
   Name="List Table 7 Colorful Accent 4"/>
  <w:LsdException Locked="false" Priority="46"
   Name="List Table 1 Light Accent 5"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 5"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 5"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 5"/>
  <w:LsdException Locked="false" Priority="51"
   Name="List Table 6 Colorful Accent 5"/>
  <w:LsdException Locked="false" Priority="52"
   Name="List Table 7 Colorful Accent 5"/>
  <w:LsdException Locked="false" Priority="46"
   Name="List Table 1 Light Accent 6"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 6"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 6"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 6"/>
  <w:LsdException Locked="false" Priority="51"
   Name="List Table 6 Colorful Accent 6"/>
  <w:LsdException Locked="false" Priority="52"
   Name="List Table 7 Colorful Accent 6"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Mention"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Smart Hyperlink"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Hashtag"/>
 </w:LatentStyles>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:굴림;
	panose-1:2 11 6 0 0 1 1 1 1 1;
	mso-font-alt:Gulim;
	mso-font-charset:129;
	mso-generic-font-family:modern;
	mso-font-pitch:variable;
	mso-font-signature:-1342176593 1775729915 48 0 524447 0;}
@font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;
	mso-font-charset:1;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:0 0 0 0 0 0;}
@font-face
	{font-family:"맑은 고딕";
	panose-1:2 11 5 3 2 0 0 2 0 4;
	mso-font-charset:129;
	mso-generic-font-family:modern;
	mso-font-pitch:variable;
	mso-font-signature:-1879048145 701988091 18 0 524289 0;}
@font-face
	{font-family:굴림체;
	panose-1:2 11 6 9 0 1 1 1 1 1;
	mso-font-charset:129;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:-1342176593 1775729915 48 0 524447 0;}
@font-face
	{font-family:"\@맑은 고딕";
	mso-font-charset:129;
	mso-generic-font-family:modern;
	mso-font-pitch:variable;
	mso-font-signature:-1879047505 165117179 18 0 524289 0;}
@font-face
	{font-family:"\@굴림체";
	mso-font-charset:129;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:-1342176593 1775729915 48 0 524447 0;}
@font-face
	{font-family:"\@굴림";
	panose-1:2 11 6 0 0 1 1 1 1 1;
	mso-font-charset:129;
	mso-generic-font-family:modern;
	mso-font-pitch:variable;
	mso-font-signature:-1342176593 1775729915 48 0 524447 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-parent:"";
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:8.0pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	line-height:105%;
	mso-pagination:none;
	text-autospace:none;
	word-break:break-hangul;
	font-size:10.0pt;
	mso-bidi-font-size:11.0pt;
	font-family:"맑은 고딕";
	mso-ascii-font-family:"맑은 고딕";
	mso-ascii-theme-font:minor-latin;
	mso-fareast-font-family:"맑은 고딕";
	mso-fareast-theme-font:minor-fareast;
	mso-hansi-font-family:"맑은 고딕";
	mso-hansi-theme-font:minor-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:minor-bidi;
	mso-font-kerning:1.0pt;}
p.MsoHeader, li.MsoHeader, div.MsoHeader
	{mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-link:"머리글 Char";
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:8.0pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	line-height:105%;
	mso-pagination:none;
	tab-stops:center 225.65pt right 451.3pt;
	layout-grid-mode:char;
	text-autospace:none;
	word-break:break-hangul;
	font-size:10.0pt;
	mso-bidi-font-size:11.0pt;
	font-family:"맑은 고딕";
	mso-ascii-font-family:"맑은 고딕";
	mso-ascii-theme-font:minor-latin;
	mso-fareast-font-family:"맑은 고딕";
	mso-fareast-theme-font:minor-fareast;
	mso-hansi-font-family:"맑은 고딕";
	mso-hansi-theme-font:minor-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:minor-bidi;
	mso-font-kerning:1.0pt;}
p.MsoFooter, li.MsoFooter, div.MsoFooter
	{mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-link:"바닥글 Char";
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:8.0pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	line-height:105%;
	mso-pagination:none;
	tab-stops:center 225.65pt right 451.3pt;
	layout-grid-mode:char;
	text-autospace:none;
	word-break:break-hangul;
	font-size:10.0pt;
	mso-bidi-font-size:11.0pt;
	font-family:"맑은 고딕";
	mso-ascii-font-family:"맑은 고딕";
	mso-ascii-theme-font:minor-latin;
	mso-fareast-font-family:"맑은 고딕";
	mso-fareast-theme-font:minor-fareast;
	mso-hansi-font-family:"맑은 고딕";
	mso-hansi-theme-font:minor-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:minor-bidi;
	mso-font-kerning:1.0pt;}
a:link, span.MsoHyperlink
	{mso-style-noshow:yes;
	mso-style-priority:99;
	color:blue;
	text-decoration:underline;
	text-underline:single;}
a:visited, span.MsoHyperlinkFollowed
	{mso-style-noshow:yes;
	mso-style-priority:99;
	color:#954F72;
	mso-themecolor:followedhyperlink;
	text-decoration:underline;
	text-underline:single;}
code
	{mso-style-noshow:yes;
	mso-style-priority:99;
	mso-ansi-font-size:12.0pt;
	mso-bidi-font-size:12.0pt;
	font-family:굴림체;
	mso-ascii-font-family:굴림체;
	mso-fareast-font-family:굴림체;
	mso-hansi-font-family:굴림체;
	mso-bidi-font-family:굴림체;}
pre
	{mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-link:"미리 서식이 지정된 HTML Char";
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:굴림체;
	mso-bidi-font-family:굴림체;}
p.MsoListParagraph, li.MsoListParagraph, div.MsoListParagraph
	{mso-style-priority:34;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:8.0pt;
	margin-left:40.0pt;
	mso-para-margin-top:0cm;
	mso-para-margin-right:0cm;
	mso-para-margin-bottom:8.0pt;
	mso-para-margin-left:4.0gd;
	text-align:justify;
	text-justify:inter-ideograph;
	line-height:105%;
	mso-pagination:none;
	text-autospace:none;
	word-break:break-hangul;
	font-size:10.0pt;
	mso-bidi-font-size:11.0pt;
	font-family:"맑은 고딕";
	mso-ascii-font-family:"맑은 고딕";
	mso-ascii-theme-font:minor-latin;
	mso-fareast-font-family:"맑은 고딕";
	mso-fareast-theme-font:minor-fareast;
	mso-hansi-font-family:"맑은 고딕";
	mso-hansi-theme-font:minor-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:minor-bidi;
	mso-font-kerning:1.0pt;}
span.HTMLChar
	{mso-style-name:"미리 서식이 지정된 HTML Char";
	mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"미리 서식이 지정된 HTML";
	mso-ansi-font-size:12.0pt;
	mso-bidi-font-size:12.0pt;
	font-family:굴림체;
	mso-ascii-font-family:굴림체;
	mso-fareast-font-family:굴림체;
	mso-hansi-font-family:굴림체;
	mso-bidi-font-family:굴림체;}
p.msonormal0, li.msonormal0, div.msonormal0
	{mso-style-name:msonormal;
	mso-style-unhide:no;
	mso-margin-top-alt:auto;
	margin-right:0cm;
	mso-margin-bottom-alt:auto;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:굴림;
	mso-bidi-font-family:굴림;}
span.Char
	{mso-style-name:"머리글 Char";
	mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:머리글;}
span.Char0
	{mso-style-name:"바닥글 Char";
	mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:바닥글;}
span.apple-converted-space
	{mso-style-name:apple-converted-space;
	mso-style-unhide:no;}
.MsoChpDefault
	{mso-style-type:export-only;
	mso-default-props:yes;
	mso-bidi-font-size:10.0pt;
	font-family:"맑은 고딕";
	mso-ascii-font-family:"맑은 고딕";
	mso-ascii-theme-font:minor-latin;
	mso-fareast-font-family:"맑은 고딕";
	mso-hansi-font-family:"맑은 고딕";
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:minor-bidi;
	mso-font-kerning:0pt;}
 /* Page Definitions */
 @page
	{mso-page-border-surround-header:no;
	mso-page-border-surround-footer:no;
	mso-footnote-separator:url("제5주_프래그먼트.files/header.htm") fs;
	mso-footnote-continuation-separator:url("제5주_프래그먼트.files/header.htm") fcs;
	mso-endnote-separator:url("제5주_프래그먼트.files/header.htm") es;
	mso-endnote-continuation-separator:url("제5주_프래그먼트.files/header.htm") ecs;}
@page WordSection1
	{size:595.3pt 841.9pt;
	margin:3.0cm 72.0pt 72.0pt 72.0pt;
	mso-header-margin:42.55pt;
	mso-footer-margin:49.6pt;
	mso-paper-source:0;}
div.WordSection1
	{page:WordSection1;}
 /* List Definitions */
 @list l0
	{mso-list-id:589312475;
	mso-list-type:hybrid;
	mso-list-template-ids:693278098 -122366066 67698713 67698715 67698703 67698713 67698715 67698703 67698713 67698715;}
@list l0:level1
	{mso-level-tab-stop:none;
	mso-level-number-position:left;
	margin-left:18.0pt;
	text-indent:-18.0pt;}
@list l0:level2
	{mso-level-number-format:alpha-upper;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	margin-left:40.0pt;
	text-indent:-20.0pt;}
@list l0:level3
	{mso-level-number-format:roman-lower;
	mso-level-tab-stop:none;
	mso-level-number-position:right;
	margin-left:60.0pt;
	text-indent:-20.0pt;}
@list l0:level4
	{mso-level-tab-stop:none;
	mso-level-number-position:left;
	margin-left:80.0pt;
	text-indent:-20.0pt;}
@list l0:level5
	{mso-level-number-format:alpha-upper;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	margin-left:100.0pt;
	text-indent:-20.0pt;}
@list l0:level6
	{mso-level-number-format:roman-lower;
	mso-level-tab-stop:none;
	mso-level-number-position:right;
	margin-left:120.0pt;
	text-indent:-20.0pt;}
@list l0:level7
	{mso-level-tab-stop:none;
	mso-level-number-position:left;
	margin-left:140.0pt;
	text-indent:-20.0pt;}
@list l0:level8
	{mso-level-number-format:alpha-upper;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	margin-left:160.0pt;
	text-indent:-20.0pt;}
@list l0:level9
	{mso-level-number-format:roman-lower;
	mso-level-tab-stop:none;
	mso-level-number-position:right;
	margin-left:180.0pt;
	text-indent:-20.0pt;}
ol
	{margin-bottom:0cm;}
ul
	{margin-bottom:0cm;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"표준 표";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-parent:"";
	mso-padding-alt:0cm 5.4pt 0cm 5.4pt;
	mso-para-margin:0cm;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"맑은 고딕";
	mso-ascii-font-family:"맑은 고딕";
	mso-ascii-theme-font:minor-latin;}
</style>
<![endif]-->
<meta http-equiv=Expires content=0>
<meta http-equiv=Cache-Control content="no=cache">
<meta http-equiv=Pragma content=no-cache>
<meta http-equiv=Expires content=0>
<meta http-equiv=Cache-Control content="no=cache">
<meta http-equiv=Pragma content=no-cache>
<meta http-equiv=Expires content=0>
<meta http-equiv=Cache-Control content="no=cache">
<meta http-equiv=Pragma content=no-cache>
<meta http-equiv=Expires content=0>
<meta http-equiv=Cache-Control content="no=cache">
<meta http-equiv=Pragma content=no-cache>
<meta http-equiv=Expires content=0>
<meta http-equiv=Cache-Control content="no=cache">
<meta http-equiv=Pragma content=no-cache>
<meta http-equiv=Expires content=0>
<meta http-equiv=Cache-Control content="no=cache">
<meta http-equiv=Pragma content=no-cache>
<meta http-equiv=Expires content=0>
<meta http-equiv=Cache-Control content="no=cache">
<meta http-equiv=Pragma content=no-cache>
<meta http-equiv=Expires content=0>
<meta http-equiv=Cache-Control content="no=cache">
<meta http-equiv=Pragma content=no-cache>
<meta http-equiv=Expires content=0>
<meta http-equiv=Cache-Control content="no=cache">
<meta http-equiv=Pragma content=no-cache>
<meta http-equiv=Expires content=0>
<meta http-equiv=Cache-Control content="no=cache">
<meta http-equiv=Pragma content=no-cache>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="2049"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=KO link=blue vlink="#954F72" style='tab-interval:40.0pt'>

<div class=WordSection1>

<p class=MsoNormal style='line-height:150%'><span style='font-size:16.0pt;
mso-bidi-font-size:11.0pt;line-height:150%'>제<span lang=EN-US> 5</span>주 실습과제<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span style='font-size:11.0pt;
mso-bidi-font-size:9.0pt;line-height:150%'>프래그먼트<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoListParagraph style='margin-left:18.0pt;mso-para-margin-left:0gd;
text-indent:-18.0pt;line-height:150%;mso-list:l0 level1 lfo2'><![if !supportLists]><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-size:11.0pt;
mso-bidi-font-size:10.0pt;line-height:150%;mso-fareast-font-family:"맑은 고딕";
mso-fareast-theme-font:minor-latin;mso-bidi-font-family:"맑은 고딕";mso-bidi-theme-font:
minor-latin'><span style='mso-list:Ignore'>1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span></span></b><![endif]><b style='mso-bidi-font-weight:normal'><span
lang=EN-US style='font-size:11.0pt;mso-bidi-font-size:10.0pt;line-height:150%'>(</span></b><b
style='mso-bidi-font-weight:normal'><span style='font-size:11.0pt;mso-bidi-font-size:
10.0pt;line-height:150%'>액티비티에 프래그먼트를 추가하는 방법 &#8211;<span lang=EN-US> 1. </span>프래그먼트를
액티비티의 레이아웃 파일 안에 선언하는 방법<span lang=EN-US>)<o:p></o:p></span></span></b></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoListParagraph style='margin-left:0cm;mso-para-margin-left:0gd;
line-height:150%'><span style='mso-bidi-font-size:10.0pt;line-height:150%'>내부에 두
개의 프래그먼트를 갖는<span lang=EN-US> Activity </span>하나로 구성된 애플리케이션을 만드시오<span
lang=EN-US>. </span>앱을 실행하면 아래와 같은 화면이 보여야 합니다<span lang=EN-US>. </span>액티비티 안에
아래 위로 두 개의 프래그먼트가 들어 있는 화면입니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shapetype id="_x0000_t75"
 coordsize="21600,21600" o:spt="75" o:preferrelative="t" path="m@4@5l@4@11@9@11@9@5xe"
 filled="f" stroked="f">
 <v:stroke joinstyle="miter"/>
 <v:formulas>
  <v:f eqn="if lineDrawn pixelLineWidth 0"/>
  <v:f eqn="sum @0 1 0"/>
  <v:f eqn="sum 0 0 @1"/>
  <v:f eqn="prod @2 1 2"/>
  <v:f eqn="prod @3 21600 pixelWidth"/>
  <v:f eqn="prod @3 21600 pixelHeight"/>
  <v:f eqn="sum @0 0 1"/>
  <v:f eqn="prod @6 1 2"/>
  <v:f eqn="prod @7 21600 pixelWidth"/>
  <v:f eqn="sum @8 21600 0"/>
  <v:f eqn="prod @7 21600 pixelHeight"/>
  <v:f eqn="sum @10 21600 0"/>
 </v:formulas>
 <v:path o:extrusionok="f" gradientshapeok="t" o:connecttype="rect"/>
 <o:lock v:ext="edit" aspectratio="t"/>
</v:shapetype><v:shape id="그림_x0020_1" o:spid="_x0000_i1092" type="#_x0000_t75"
 style='width:193.5pt;height:374.25pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image001.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img width=258 height=499
src="제5주_프래그먼트.files/image002.jpg" v:shapes="그림_x0020_1"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'>7<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>애플리케이션 이름은<span lang=EN-US> Fragament</span>로 짓고 프로젝트 디렉토리
이름은<span lang=EN-US> Fragment1</span>으로 지으시오<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="그림_x0020_2"
 o:spid="_x0000_i1091" type="#_x0000_t75" style='width:339pt;height:423pt;
 visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image003.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img width=452 height=564
src="제5주_프래그먼트.files/image003.png" v:shapes="그림_x0020_2"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>세 번 엔터키를 누르고<span lang=EN-US> Finish</span>를 선택하면 아래와 같은
기본 앱이 만들어집니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="그림_x0020_3"
 o:spid="_x0000_i1090" type="#_x0000_t75" style='width:636pt;height:266.25pt;
 visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image004.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img width=848 height=355
src="제5주_프래그먼트.files/image004.png" v:shapes="그림_x0020_3"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>우선 프래그먼트를 하나 추가합니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="그림_x0020_4"
 o:spid="_x0000_i1089" type="#_x0000_t75" style='width:825pt;height:456pt;
 visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image005.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img width=1100 height=608
src="제5주_프래그먼트.files/image005.png" v:shapes="그림_x0020_4"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>이름을 바꿔주고 불필요한 코드가 추가되지 않도록 아래 두 개의 체크를 풀어줍니다<span
lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="그림_x0020_5"
 o:spid="_x0000_i1088" type="#_x0000_t75" style='width:600.75pt;height:311.25pt;
 visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image006.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img width=801 height=415
src="제5주_프래그먼트.files/image006.png" v:shapes="그림_x0020_5"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>그러면<span lang=EN-US> FirstFragment.java </span>파일이 만들어집니다<span
lang=EN-US>. </span>자동으로<span lang=EN-US> fragment_first.xml </span>파일도 함께 만들어집니다<span
lang=EN-US>. res.layout </span>폴더에서 확인할 수 있습니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="그림_x0020_6"
 o:spid="_x0000_i1087" type="#_x0000_t75" style='width:199.5pt;height:130.5pt;
 visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image007.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img width=266 height=174
src="제5주_프래그먼트.files/image007.png" v:shapes="그림_x0020_6"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'>FirstFragment </span><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>클래스 코드를 보면<span lang=EN-US> onCreateView </span>메소드가 재정의되어
있습니다<span lang=EN-US>. </span>이 메소드에서<span lang=EN-US> fragment_first.xml </span>파일에
들어 있는 레이아웃을 부풀려<span lang=EN-US> View</span>를 만들고 <span style='color:red'>그<span
lang=EN-US> View</span>를 반환</span>합니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="그림_x0020_7"
 o:spid="_x0000_i1086" type="#_x0000_t75" style='width:739.5pt;height:384pt;
 visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image008.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img width=986 height=512
src="제5주_프래그먼트.files/image008.png" v:shapes="그림_x0020_7"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>같은 방법으로 두 번째 프래그먼트를 추가합니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="그림_x0020_8"
 o:spid="_x0000_i1085" type="#_x0000_t75" style='width:264.75pt;height:346.5pt;
 visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image009.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img width=353 height=462
src="제5주_프래그먼트.files/image009.png" v:shapes="그림_x0020_8"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>늘 그랬듯이<span lang=EN-US> MainActivity</span>에는<span
lang=EN-US> R.layout.activity_main </span>레이아웃이 화면에 보여지도록 되어 있습니다<span
lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="그림_x0020_9"
 o:spid="_x0000_i1084" type="#_x0000_t75" style='width:618pt;height:117.75pt;
 visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image010.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img width=824 height=157
src="제5주_프래그먼트.files/image010.png" v:shapes="그림_x0020_9"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'>activity_main.xml </span><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>파일을 엽니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="그림_x0020_10"
 o:spid="_x0000_i1083" type="#_x0000_t75" style='width:546.75pt;height:96pt;
 visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image011.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img width=729 height=128
src="제5주_프래그먼트.files/image011.png" v:shapes="그림_x0020_10"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>이 곳에 기본으로 들어 있는<span lang=EN-US> TextView </span>대신 프래그먼트
두 개를 배치해야 합니다<span lang=EN-US>. </span>프래그먼트 두 개를 아래 위로 꽉 차게 배치하기 위해서는<span
lang=EN-US> LinearLayout</span>이 간편합니다<span lang=EN-US>. ConstraintLayout</span>을<span
lang=EN-US> LinearLayout</span>으로 바꿔주고<span lang=EN-US> TextView</span>는 삭제합니다<span
lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="그림_x0020_11"
 o:spid="_x0000_i1082" type="#_x0000_t75" style='width:391.5pt;height:2in;
 visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image012.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img width=522 height=192
src="제5주_프래그먼트.files/image012.png" v:shapes="그림_x0020_11"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>디자인 화면으로 전환하고<span lang=EN-US> LinearLayout</span>의<span
lang=EN-US> orientation</span>을 “<span lang=EN-US>vertical</span>”로 설정해 줍니다<span
lang=EN-US>. <o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>팔레트에서<span lang=EN-US> Fragment</span>를 끌어다가<span
lang=EN-US> LinearLayout</span>에 넣습니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="그림_x0020_12"
 o:spid="_x0000_i1081" type="#_x0000_t75" style='width:258pt;height:403.5pt;
 visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image013.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img width=344 height=538
src="제5주_프래그먼트.files/image013.png" v:shapes="그림_x0020_12"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>대화창에서 우리가 방금 만든 프래그먼트를 선택합니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="그림_x0020_13"
 o:spid="_x0000_i1080" type="#_x0000_t75" style='width:498pt;height:200.25pt;
 visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image014.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img width=664 height=267
src="제5주_프래그먼트.files/image014.png" v:shapes="그림_x0020_13"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>두 번째 프래그먼트도 넣어 줍니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="그림_x0020_14"
 o:spid="_x0000_i1079" type="#_x0000_t75" style='width:633pt;height:186pt;
 visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image015.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img width=844 height=248
src="제5주_프래그먼트.files/image015.png" v:shapes="그림_x0020_14"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>프래그먼트 두 개가 모두 위에 붙어 있으므로 두 프그래그먼트 각각의<span lang=EN-US>
layout_height</span>를 “<span lang=EN-US>0dp</span>”로 설정하고<span lang=EN-US>
layout_weight</span>를<span lang=EN-US> 1</span>로 설정합니다<span lang=EN-US>. </span>세로방향으로
두 프래그먼트가<span lang=EN-US> 1:1</span>의 비율로 자리를 차지하게 하는 것입니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="그림_x0020_15"
 o:spid="_x0000_i1078" type="#_x0000_t75" style='width:906pt;height:318.75pt;
 visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image016.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img width=1208 height=425
src="제5주_프래그먼트.files/image016.png" v:shapes="그림_x0020_15"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'>fragment_first.xml </span><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>파일을 엽니다<span lang=EN-US> Root view</span>가<span
lang=EN-US> FrameLayout</span>으로 설정되어 있습니다<span lang=EN-US>. FrameLayout</span>은
그 내부에 하나의<span lang=EN-US> view</span>만 놓을 수 있습니다<span lang=EN-US>. </span>우리는 조금
더 자유로운 레이아웃이 필요하므로 이것을<span lang=EN-US> ConstraintLayout</span>으로 바꿔 줍니다<span
lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="그림_x0020_16"
 o:spid="_x0000_i1077" type="#_x0000_t75" style='width:898.5pt;height:208.5pt;
 visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image017.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img width=1198 height=278
src="제5주_프래그먼트.files/image017.png" v:shapes="그림_x0020_16"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'>TextView</span><span style='mso-bidi-font-size:10.0pt;
line-height:150%'>의 너비와 높이를 내용물에 맞추도록 바꾸고 용수철 모양을 연결하여<span lang=EN-US>
constraint</span>가 설정되도록 합니다<span lang=EN-US>. </span>텍스트도 “<span lang=EN-US>First
Fragment</span>”로 바꿔 줍니다<span lang=EN-US>. </span>글자 크기도 바꿉니다<span lang=EN-US>.
18 sp. Gravity</span>를<span lang=EN-US> center</span>로 설정하여 텍스트가<span
lang=EN-US> TextView</span>의 중앙에 오도록 합니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="그림_x0020_17"
 o:spid="_x0000_i1076" type="#_x0000_t75" style='width:930.75pt;height:381.75pt;
 visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image018.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img width=1241 height=509
src="제5주_프래그먼트.files/image018.png" v:shapes="그림_x0020_17"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'>fragment_second.xml </span><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>파일에도 같은 조작을 해 줍니다<span lang=EN-US>. </span>단<span
lang=EN-US>, root layout</span>인<span lang=EN-US> ContraintLayout</span>의 <span
lang=EN-US style='color:red'>background</span><span style='color:red'>를 설정해 </span>줍니다<span
lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>정리<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'>Activity</span><span style='mso-bidi-font-size:10.0pt;
line-height:150%'>의<span lang=EN-US> onCreate </span>메소드가 실행되면<span lang=EN-US>
activity_main </span>레이아웃이 화면에 놓여지는데<span lang=EN-US>(</span>아직 눈에 보이지는 않음<span
lang=EN-US>) activity_main</span>이 두 개의<span lang=EN-US> Fragment(FristFragment</span>와<span
lang=EN-US> SecondFragment)</span>를 포함하고 있으므로 이<span lang=EN-US> Fragment</span>들도<span
lang=EN-US> activity_main</span>에 붙여진다<span lang=EN-US>. </span>그러면 시스템이 각<span
lang=EN-US> Fragment</span>에게<span lang=EN-US> onCreateView </span>메소드를 호출하는데<span
lang=EN-US> onCreateView </span>메소드는 각<span lang=EN-US> Fragment</span>의<span
lang=EN-US> layout</span>을 부풀려<span lang=EN-US>(</span>객체화하고 메모리에 로드하여<span
lang=EN-US>) </span>부풀려진<span lang=EN-US> View</span>를 반환한다<span lang=EN-US>. </span>시스템은
그<span lang=EN-US> View</span>를 받아<span lang=EN-US> activity_main </span>화면의 지정된
자리에 놓는다<span lang=EN-US>. </span>부풀려진 각 프래그먼트<span lang=EN-US> View </span>객체가 놓일
자리는<span lang=EN-US> activity_main.xml </span>파일에 의해 지정된다<span lang=EN-US>. </span>위
과제의 경우 부풀려진 각 프래그먼트<span lang=EN-US> View</span>들이 붙여질 자리는<span lang=EN-US>
activity_main</span>의<span lang=EN-US> root view</span>인<span lang=EN-US>
RelativeLayout</span>이다<span lang=EN-US>. (</span>강의자료<span lang=EN-US> 25</span>쪽
언저리<span lang=EN-US>, XML layout</span>은 어떻게 작동하나<span lang=EN-US>? </span>참고<span
lang=EN-US>)<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>아래 그림은<span lang=EN-US> onCreateView </span>메소드 코드를 보인다<span
lang=EN-US>. </span>시스템이 이 메소드를 호출할 때 빨간 네모 안에 있는<span lang=EN-US> container</span>를
공급해 주는데 이것이 바로 프래그먼트 레이아웃을 부풀려 만든<span lang=EN-US> View</span>를 넣을 자리이다<span
lang=EN-US>. </span>시스템은<span lang=EN-US> activity_main.xml </span>파일을 분석하여 이 자리를
알게 된다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="그림_x0020_18"
 o:spid="_x0000_i1075" type="#_x0000_t75" style='width:735pt;height:225.75pt;
 visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image019.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img width=980 height=301
src="제5주_프래그먼트.files/image019.png" v:shapes="그림_x0020_18"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoListParagraph style='margin-left:18.0pt;mso-para-margin-left:0gd;
text-indent:-18.0pt;line-height:150%;mso-list:l0 level1 lfo2'><![if !supportLists]><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-size:11.0pt;
mso-bidi-font-size:10.0pt;line-height:150%;mso-fareast-font-family:"맑은 고딕";
mso-fareast-theme-font:minor-latin;mso-bidi-font-family:"맑은 고딕";mso-bidi-theme-font:
minor-latin'><span style='mso-list:Ignore'>2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span></span></b><![endif]><b style='mso-bidi-font-weight:normal'><span
lang=EN-US style='font-size:11.0pt;mso-bidi-font-size:10.0pt;line-height:150%'>(</span></b><b
style='mso-bidi-font-weight:normal'><span style='font-size:11.0pt;mso-bidi-font-size:
10.0pt;line-height:150%'>액티비티에 프래그먼트를 추가하는 방법 &#8211;<span lang=EN-US> 2. </span>프래그먼트를
프로그래밍 방식으로 기존의<span lang=EN-US> ViewGroup</span>에 추가하는 방법<span lang=EN-US>)<o:p></o:p></span></span></b></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>위<span lang=EN-US> 1</span>번 과제에서는 앱 실행 전에 미리 작성한<span
lang=EN-US> XML </span>파일을 통해 프래그먼트를 액티비티 안에 위치시키는 방식으로 앱을 작성했습니다<span
lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>이번에는 <span style='color:red'>런타임에 프로그램에서 동적으로 </span>프래그먼트를
액티비티에 넣는 방식으로 앱을 작성해 봅니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>위<span lang=EN-US> 1</span>번 과제에서 작성한<span lang=EN-US>
Fragment1 </span>프로젝트를 복사하여<span lang=EN-US> Fragment2 </span>프로젝트를 만든다<span
lang=EN-US>. <a
href="http://dmrl.kangwon.ac.kr/lecture/1701/android/data/%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8_%EB%B3%B5%EC%82%AC_%EB%B0%A9%EB%B2%95.htm"><span
lang=EN-US><span lang=EN-US>방법</span></span></a><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'>main_activity.xml </span><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>파일을 열고 두 개의<span lang=EN-US> fragment element</span>를<span
lang=EN-US> LinearLayout</span>으로 바꿉니다<span lang=EN-US>. </span>각<span
lang=EN-US> LinearLayout</span>의<span lang=EN-US> id</span>를<span lang=EN-US>
fragment1_container, fragment2_container</span>로 바꾸고<span lang=EN-US>, <span
style='color:red'>android:name </span></span><span style='color:red'>속성을 삭제</span>합니다<span
lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>이렇게 하면<span lang=EN-US> main_activity</span>는<span
lang=EN-US> fragment</span>를 포함하지 않고 대신<span lang=EN-US> LinearLayout </span>두 개를
포함합니다<span lang=EN-US>. </span>두<span lang=EN-US> LinearLayout</span>의 이름은 각각<span
lang=EN-US> fragment1_container, fragment2_container</span>입니다<span lang=EN-US>.
</span>우리는 런타임에 동적으로 프래먼트를 생성하여 이 두 장소에 넣을 것입니다<span lang=EN-US>. </span>이 작업은 자바
코드에서 구현합니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'>ActivityMain.java </span><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>파일의<span lang=EN-US> onCreate </span>메소드를 아래 그림과 같이 수정해
줍니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="그림_x0020_19"
 o:spid="_x0000_i1074" type="#_x0000_t75" style='width:390.75pt;height:339pt;
 visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image020.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img border=0 width=521 height=452
src="제5주_프래그먼트.files/image020.png" v:shapes="그림_x0020_19"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>앱이 실행되고 위 그림의<span lang=EN-US> onCreate </span>메소드가 실행되면
두 개의 프래그먼트 객체가 생성됩니다<span lang=EN-US>. </span>그리고 액티비티의<span lang=EN-US>
FragmentManger</span>가 이들 두 개의 프래그먼트를 각각<span lang=EN-US> fragment1_container</span>와<span
lang=EN-US> fragment2_container</span>에 넣어 줍니다<span lang=EN-US>. </span>이 넣는 동작에
따라 각 프래그먼트의<span lang=EN-US> onCreateView </span>메소드가 호출되는데<span lang=EN-US>
onCreateView </span>메소드가 프래그먼트 레이아웃<span lang=EN-US>(fragment_first</span>와<span
lang=EN-US> fragment_second)</span>을 부풀려<span lang=EN-US> View </span>객체를 만들어 반환합니다<span
lang=EN-US>. </span>그러면 시스템이 이 반환된<span lang=EN-US> View</span>를<span
lang=EN-US> fragment1_container</span>와<span lang=EN-US> fragment2_container</span>에
붙여 줍니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>앱 실행 화면은 위<span lang=EN-US> 1</span>번에서 만든 앱과 같아야 합니다<span
lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>이 문제에서는<span lang=EN-US> onCreate</span>에서 두 개의 프래그먼트를
액티비티의 레이아웃에 붙였기 때문에 언제 프로그먼트가 액비티비의 레이아웃에 붙여지는가 하는 측면에서 볼 때 위<span lang=EN-US>
1</span>번 문제와 차이가 없습니다<span lang=EN-US>. </span>그러나 이 방법을 사용하면 필요에 따라 언제든 프로그먼트를
액티비티의 레이아웃에 붙일 수 있습니다<span lang=EN-US>. onStart</span>나<span lang=EN-US>
onResume</span>에서 붙일 수도 있고<span lang=EN-US>, </span>또 프래그먼트를 단순히 제거하거나 다른 프래그먼트로
교체할 수도 있으며<span lang=EN-US>, </span>이런 작업을 여러 번 할 수도 있습니다<span lang=EN-US>. </span>즉<span
lang=EN-US>, </span>런타임에 동적<span lang=EN-US>(dynamic)</span>으로 수행합니다<span
lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%'><b style='mso-bidi-font-weight:
normal'><span style='mso-bidi-font-size:10.0pt;line-height:150%'>프래그먼트 인스턴스가 여러
번 붙여지는 상황 방지<span lang=EN-US><o:p></o:p></span></span></b></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>위 코드에는 한 가지 문제가 있습니다<span lang=EN-US>. </span>프래그먼트 인스턴스가
여러 번 붙여지는 상황이 발생할 수 있습니다<span lang=EN-US>. </span>지난 주에 학습했듯이 안드로이드 기기를 회전시키면 새로운
레이아웃을 적용해야 하기 때문에 시스템이 액티비티를 파괴<span lang=EN-US>(destroy)</span>하고 새로 만들어<span
lang=EN-US>(create) </span>줍니다<span lang=EN-US>. </span>액티비티에 들어 있는 프래그먼트도 함께 파괴되고
다시 만들어집니다<span lang=EN-US>. </span>이 때 액티비티와 프래그먼트의 상태정보를 보존하는 절차가 작동합니다<span
lang=EN-US>. </span>기본<span lang=EN-US> View</span>들의 상태정보는 자동으로 보존됩니다<span
lang=EN-US>. </span>프로그래머가 새로 선언한 상태정보는 저장과 복원을 프로그래머가 알아서 코드로 구현해 주어야 합니다<span
lang=EN-US>. <o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>우리가 작성한 현재의 앱을 실행하고 기기를 돌리면 액티비티가 새로 구성되는 과정에서 그 안에 있는
프래그먼트들은 자동으로 복원됩니다<span lang=EN-US>. </span>그런데 우리가 작성한 코드를 보면 <span
lang=EN-US>Activity</span>의<span lang=EN-US> onCreate </span>메소드에서 무조건 프래그먼트를 추가하고
있습니다<span lang=EN-US>. </span>그러니까 기기를 돌릴 때마다 프로그먼트 인스턴스가 자꾸만 추가됩니다<span
lang=EN-US>. </span>자꾸 돌리다 보면 자원이 소모됩니다<span lang=EN-US>(resource leak).<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>액티비티가 맨 처음 만들어질 때는 액티비티에 프래그먼트를 붙여주어야 합니다<span
lang=EN-US>. </span>그러나 액티비티가 파괴됐다가 다시 만들어질 때는 프래그먼트를 붙여주지 말아야 합니다<span
lang=EN-US>. </span>액비비티가 처음 만들어는 것인지 여부는 시스템이<span lang=EN-US> onCreate </span>메소드에
공급해 주는<span lang=EN-US> saveInstanceState </span>번들을 보고 판단할 수 있습니다<span
lang=EN-US>. </span>액티비티가 파괴됐다가 다시 만들어질 때는<span lang=EN-US> savedInstanceState</span>가<span
lang=EN-US> null</span>이 아닙니다<span lang=EN-US>. </span>파괴되기 전 액티비티의 상태정보가<span
lang=EN-US> savedInstanceState </span>번들에 저장되어 있습니다<span lang=EN-US>. </span>반면
액티비티가 맨 처음 만들어질 때는<span lang=EN-US> savedInstanceState</span>가<span lang=EN-US>
null</span>입니다<span lang=EN-US>. <o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>기기를 돌릴 때마다 프래그먼트가 반복적으로 추가되어 자원이 소모되는 일을 방지하기 위해 아래 그림의
첫 빨간 네모와 같이 코드를 추가합니다<span lang=EN-US>. </span>모니터링을 위해 두 번째 빨간 네모를 추가하여 프래그먼트가
붙여질 때마다 그 사실을 화면에 출력하도록 합니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="그림_x0020_20"
 o:spid="_x0000_i1073" type="#_x0000_t75" style='width:374.25pt;height:404.25pt;
 visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image021.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img border=0 width=499 height=539
src="제5주_프래그먼트.files/image021.png" v:shapes="그림_x0020_20"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>이제 다시 앱을 실행하고 기기를 돌려보세요<span lang=EN-US>. </span>앱이 시작될
때만 딱 한 번 프래그먼트가 붙여집니다<span lang=EN-US>. </span>기기를 돌릴 때는 프래그먼트가 추가로 붙여지지 않습니다<span
lang=EN-US>. </span>위 코드에서 첫 번째 빨간 네모 부분을 주석처리하고 다시 실행해 보면 기기를 돌릴 때마다 프래그먼트가 계속
추가되는 것을 확인할 수 있을 것입니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoListParagraph style='margin-left:18.0pt;mso-para-margin-left:0gd;
text-indent:-18.0pt;line-height:150%;mso-list:l0 level1 lfo2'><![if !supportLists]><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-size:11.0pt;
mso-bidi-font-size:10.0pt;line-height:150%;mso-fareast-font-family:"맑은 고딕";
mso-fareast-theme-font:minor-latin;mso-bidi-font-family:"맑은 고딕";mso-bidi-theme-font:
minor-latin'><span style='mso-list:Ignore'>3.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span></span></b><![endif]><b style='mso-bidi-font-weight:normal'><span
lang=EN-US style='font-size:11.0pt;mso-bidi-font-size:10.0pt;line-height:150%'>(</span></b><b
style='mso-bidi-font-weight:normal'><span style='font-size:11.0pt;mso-bidi-font-size:
10.0pt;line-height:150%'>액티비티와 프래그먼트 간 통신<span lang=EN-US>)<o:p></o:p></span></span></b></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>프래그먼트는 독립된 단위로서 여러 액티비티에 사용될 수 있어 독립성을 갖고 있습니다<span
lang=EN-US>. </span>반면 프래그먼트는 일반적으로 액티비티 안에 있는<span lang=EN-US> UI</span>이므로 액티비티
단위의 동작에 참여해야 합니다<span lang=EN-US>. </span>프래그먼트의 독립성 때문에 프래그먼트와 액티비티간 상호작용이 조금 복잡해집니다<span
lang=EN-US>. </span>이 과제에서는 프래그먼트에서 이벤트가 발생했을 때 이를 액티비티에 알리고 액티비티가 적절한 일을 하도록 하는
방법을 알아봅니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>위<span lang=EN-US> 2</span>번 과제에서 작성한<span lang=EN-US>
Fragment2 </span>프로젝트를 복사하여<span lang=EN-US> Fragment3 </span>프로젝트를 만듭니다<span
lang=EN-US>. <a
href="http://dmrl.kangwon.ac.kr/lecture/1701/android/data/%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8_%EB%B3%B5%EC%82%AC_%EB%B0%A9%EB%B2%95.htm"><span
lang=EN-US><span lang=EN-US>방법</span></span></a><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'>fragment_first.xml </span><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>파일을 열어 이미 있는<span lang=EN-US> TextView </span>아래에 새<span
lang=EN-US> TextView</span>를 하나 추가합니다<span lang=EN-US>. </span>이 곳에 터치 횟수가 나타나게
할 것입니다<span lang=EN-US>. </span>새<span lang=EN-US> TextView</span>의<span
lang=EN-US> id</span>를 적절히<span lang=EN-US> (</span>가령<span lang=EN-US>
display) </span>정해 줍니다<span lang=EN-US>. </span>자바 코드에서 이<span lang=EN-US>
TextView</span>에 터치 횟수를 적어 줄 것이므로 이<span lang=EN-US> TextView</span>를 가리키는 레퍼런스가
필요하기 때문입니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'>fragment_second.xml </span><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>파일을 열어 이미 있는<span lang=EN-US> TextView </span>아래에 새<span
lang=EN-US> Button </span>두 개를 아래 그림처럼 배치합니다<span lang=EN-US>. </span><span
style='color:red'>각각 아이디를 부여하고 텍스트도 그림처럼 지정해 줍니다</span><span lang=EN-US>. </span>디자인
화면에서 오른쪽 버튼의 세로 방향 위치를 왼쪽 버튼에 맞추기 위해<span lang=EN-US> constraint(</span>화살표 연결선<span
lang=EN-US>)</span>를 어떻게 설정하는지 주목하세요<span lang=EN-US>. </span>화면설계 <span
lang=EN-US><a href="videos/ContraintTwoButtons.mp4"><span lang=EN-US><span
lang=EN-US>동영상</span></span></a></span>을 참고하세요<span lang=EN-US>. </span>음성 설명이 포함되어
있습니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="그림_x0020_21"
 o:spid="_x0000_i1072" type="#_x0000_t75" style='width:775.5pt;height:426.75pt;
 visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image022.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img border=0 width=1034 height=569
src="제5주_프래그먼트.files/image023.jpg" v:shapes="그림_x0020_21"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>이제 자바 코드를 작성할 차례입니다<span lang=EN-US>. SecondFragment</span>에
터치 횟수를 기록하기 위한<span lang=EN-US> count</span>라는 상태변수를 선언합니다<span lang=EN-US>.
TOUCH </span>버튼이 터치될 때마다<span lang=EN-US> count</span>를 증가시키도록 하고<span
lang=EN-US>, SHOW </span>버튼이 터치되면<span lang=EN-US> count </span>값을 액티비티에 알리고 액티비티가<span
lang=EN-US> FirstFragment</span>의<span lang=EN-US> display TextView</span>에 이<span
lang=EN-US> count </span>값을 출력하도록 해야 합니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'>TOUCH </span><span style='mso-bidi-font-size:10.0pt;
line-height:150%'>버튼의 터치이벤트는 프래그먼트 내부에서 처리하면 됩니다<span lang=EN-US>. </span>지난 주에
학습한 내용이므로 이에 대해서는 따로 설명하지 않습니다<span lang=EN-US>. <o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'>SHOW </span><span style='mso-bidi-font-size:10.0pt;
line-height:150%'>버튼의 터치이벤트는 액티비티에 알려야 합니다<span lang=EN-US>. </span>프래그먼트가 액티비티에게
이벤트 정보를 전달하는 표준 방법은 이번 주 강의자료 중<span lang=EN-US> &quot;</span>액티비티와의 통신<span
lang=EN-US>&quot; </span>제목으로 일곱 쪽 정도에 걸쳐 설명되어 있습니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>우선 프래그먼트 클래스 안에 인터페이스를 하나 선언합니다<span lang=EN-US>. </span>이
인터페이스는<span lang=EN-US> onShowButtonTouch </span>메소드를 요구합니다<span lang=EN-US>. </span>이
인터페이스를 구현했다고 주장하려면<span lang=EN-US> onShowButtonTouch </span>메소드를 갖추고 있어야 합니다<span
lang=EN-US>. OnShowTouchButtonListener </span>인터페이스를 구현하고 있는 객체<span
lang=EN-US>, </span>그러니까<span lang=EN-US> OnShowButtonTouchListener</span>에게는<span
lang=EN-US> onShowButtonTouch </span>메소드를 호출할 수 있습니다<span lang=EN-US>. </span>우리는
액티비티가 이 메소드를 구현하도록 할 것이고<span lang=EN-US>, SHOW </span>버튼에 터치가 일어나면 액티비티의<span
lang=EN-US> onShowButtonTouch </span>메소드가 호출되게 할 것입니다<span lang=EN-US>. <o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="그림_x0020_22"
 o:spid="_x0000_i1071" type="#_x0000_t75" style='width:364.5pt;height:237.75pt;
 visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image024.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img border=0 width=486 height=317
src="제5주_프래그먼트.files/image024.png" v:shapes="그림_x0020_22"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>그리고 세 개의 필드를 선언합니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="그림_x0020_23"
 o:spid="_x0000_i1070" type="#_x0000_t75" style='width:288.75pt;height:136.5pt;
 visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image025.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img border=0 width=385 height=182
src="제5주_프래그먼트.files/image025.png" v:shapes="그림_x0020_23"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'>touchButton</span><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>과<span lang=EN-US> showButton </span>필드가 각각<span
lang=EN-US> TOUCH </span>버튼과<span lang=EN-US> SHOW </span>버튼을 가리키게 해야 합니다<span
lang=EN-US>. </span>그런데 프래그먼트의<span lang=EN-US> View</span>는<span lang=EN-US>
onCreateView </span>메소드가 레이아웃을 부풀려 만든<span lang=EN-US> View</span>를 반환하고 난 후에야 비로소
존재하게 됩니다<span lang=EN-US>. </span>그러니까 프래그먼트 안에 있는 두 버튼을 가리키는 레퍼런스도 그 이후에야 비로소 얻을
수 있습니다<span lang=EN-US>. onCreateView </span>메소드가 리턴한 다음에 호출되는 메소드는<span
lang=EN-US> onStart</span>입니다<span lang=EN-US>. </span>여기에 두 버튼의 레퍼런스를 얻어 오는 코드를
넣습니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="그림_x0020_24"
 o:spid="_x0000_i1069" type="#_x0000_t75" style='width:372pt;height:114pt;
 visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image026.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img border=0 width=496 height=152
src="제5주_프래그먼트.files/image026.png" v:shapes="그림_x0020_24"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>프래그먼트에는<span lang=EN-US> findViewById </span>메소드를 호출할 수
없습니다<span lang=EN-US>. </span>프래그먼트에게<span lang=EN-US> getView </span>메소드를 호출하면
프래그먼의<span lang=EN-US> root view(onCreateView</span>메소드가 부풀려 반환한<span
lang=EN-US> View)</span>가 리턴됩니다<span lang=EN-US>. </span>이<span lang=EN-US>
View</span>에게<span lang=EN-US> findViewById</span>를 호출해야 합니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>다음으로<span lang=EN-US> MainActivity.java</span>를 엽니다<span
lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'>SHOW </span><span style='mso-bidi-font-size:10.0pt;
line-height:150%'>버튼이 터치될 때마다 액티비티가<span lang=EN-US> FirstFragment</span>의 <span
lang=EN-US>TextView</span>에 출력을 해야 합니다<span lang=EN-US>. </span>그러니까 액티비티가<span
lang=EN-US> FirstFragment </span>안에 있는<span lang=EN-US> TextView</span>에 접근하려면 우선<span
lang=EN-US> FirstFragment </span>인스턴스를 가리키는 레퍼런스를 가지고 있어야 합니다<span lang=EN-US>.
</span>그렇게 하기 위해 원래<span lang=EN-US> onCreateView</span>의 <span
style='color:red'>지역변수</span>였던<span lang=EN-US> firstFragment</span>를 액티비티의 <span
style='color:red'>필드</span>로 변경합니다<span lang=EN-US>. </span>또<span lang=EN-US>,
</span>이 액티비티가<span lang=EN-US> SecondFragment.OnShowButtonListener </span>인터페이스를
구현하도록 합니다<span lang=EN-US>(</span>파란 네모 박스<span lang=EN-US>!).<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="그림_x0020_25"
 o:spid="_x0000_i1068" type="#_x0000_t75" style='width:373.5pt;height:346.5pt;
 visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image027.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img border=0 width=498 height=462
src="제5주_프래그먼트.files/image027.png" v:shapes="그림_x0020_25"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>액티비티의<span lang=EN-US> onCreate</span>에 따라 프래그먼트의<span
lang=EN-US> onCreateView</span>가 프래그먼트에 들어갈<span lang=EN-US> View</span>를 반환하고 나면<span
lang=EN-US>, </span>액티비티의<span lang=EN-US> onStart </span>메소드가 호출됩니다<span
lang=EN-US>. </span>이 때는 프래그먼트 안의<span lang=EN-US> View</span>가 준비된 상태이므로<span
lang=EN-US> View</span>에 접근할 수 있습니다<span lang=EN-US>. </span>우리 액티비티는<span
lang=EN-US> firstFragment </span>안에 있는 두 번째<span lang=EN-US> TextView</span>에 출력을
해야 하므로 이를 가리키는 레퍼런스가 필요합니다<span lang=EN-US>. </span>이를 위해 아래 그림과 같이 필드를 하나 추가로 선언하고<span
lang=EN-US> onStart </span>메소드에서<span lang=EN-US> display</span>를 가리키는 레퍼런스를 얻어
저장해 둡니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="그림_x0020_26"
 o:spid="_x0000_i1067" type="#_x0000_t75" style='width:315.75pt;height:91.5pt;
 visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image028.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img border=0 width=421 height=122
src="제5주_프래그먼트.files/image028.png" v:shapes="그림_x0020_26"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="그림_x0020_27"
 o:spid="_x0000_i1066" type="#_x0000_t75" style='width:392.25pt;height:83.25pt;
 visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image029.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img border=0 width=523 height=111
src="제5주_프래그먼트.files/image029.png" v:shapes="그림_x0020_27"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>이제<span lang=EN-US> OnShowButtonTouch </span>인터페이스의<span
lang=EN-US> onShowButtonTouch </span>메소드를 구현합니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="그림_x0020_28"
 o:spid="_x0000_i1065" type="#_x0000_t75" style='width:262.5pt;height:57pt;
 visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image030.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img border=0 width=350 height=76
src="제5주_프래그먼트.files/image030.png" v:shapes="그림_x0020_28"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>이렇게 하여<span lang=EN-US> MainActivity.java</span>는 완성되었습니다<span
lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>다시<span lang=EN-US> SecondFragment.java </span>파일로 돌아옵니다<span
lang=EN-US>. <o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'>Show </span><span style='mso-bidi-font-size:10.0pt;
line-height:150%'>버튼이 터치되면<span lang=EN-US> OnShowButtonTouchListener</span>의<span
lang=EN-US> onShowButtonTouch </span>메소드를 호출해야 합니다<span lang=EN-US>. </span>우리의
경우<span lang=EN-US> MainActivity</span>가<span lang=EN-US> OnShowButtonTouchListener
</span>인터페이스를 구현했으므로<span lang=EN-US> MainActivity</span>가 바로<span lang=EN-US>
OnShowButtonTouchListener</span>입니다<span lang=EN-US>. OnShowButtonTouchListener</span>에게
메소드를 호출하려면 레퍼런스가 있어야 합니다<span lang=EN-US>. </span>이를 위한 필드를 추가합니다<span
lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="그림_x0020_29"
 o:spid="_x0000_i1064" type="#_x0000_t75" style='width:255pt;height:111.75pt;
 visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image031.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img border=0 width=340 height=149
src="제5주_프래그먼트.files/image031.png" v:shapes="그림_x0020_29"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>프래그먼트가 처음 액티비티에 붙여질 때 프래그먼트의<span lang=EN-US> onAttach
</span>메소드가 호출됩니다<span lang=EN-US>. </span>이 메소드의 파라미터가<span lang=EN-US>
Context </span>타입인데 실제로는<span lang=EN-US> MainActivity</span>가 공급됩니다<span
lang=EN-US>. </span>그러니까 이것을 기억해 놓으면 됩니다<span lang=EN-US>. Context</span>는 앱의 제반
환경 정보 덩어리입니다<span lang=EN-US>. Activity</span>는<span lang=EN-US> Context</span>의
서브클래스입니다<span lang=EN-US>. </span>아래 코드를 추가합니다<span lang=EN-US>. </span>혹시나<span
lang=EN-US> MainActivity</span>가<span lang=EN-US> OnShowButtonTouchListener </span>인터페이스를
구현하지 않았다면 예외를 던집니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="그림_x0020_30"
 o:spid="_x0000_i1063" type="#_x0000_t75" style='width:347.25pt;height:197.25pt;
 visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image032.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img border=0 width=463 height=263
src="제5주_프래그먼트.files/image032.png" v:shapes="그림_x0020_30"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>이제<span lang=EN-US> touchButton</span>과<span
lang=EN-US> showButton</span>에 각각<span lang=EN-US> OnTouchListener</span>를 등록합니다<span
lang=EN-US>. touchButton</span>의 터치리스너는 터치가 있을 때마다<span lang=EN-US> count</span>를
증가시킵니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="그림_x0020_31"
 o:spid="_x0000_i1062" type="#_x0000_t75" style='width:357pt;height:249pt;
 visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image033.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img border=0 width=476 height=332
src="제5주_프래그먼트.files/image033.png" v:shapes="그림_x0020_31"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'>showButton</span><span style='mso-bidi-font-size:10.0pt;
line-height:150%'>의 터치리스너는 액티비티의<span lang=EN-US> onShowButtonTouch </span>메소드를
호출합니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="그림_x0020_32"
 o:spid="_x0000_i1061" type="#_x0000_t75" style='width:352.5pt;height:342pt;
 visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image034.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img border=0 width=470 height=456
src="제5주_프래그먼트.files/image034.png" v:shapes="그림_x0020_32"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><span style='mso-spacerun:yes'>&nbsp;</span><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>이제 앱을 실행한 후<span lang=EN-US> TOUCH </span>버튼을 한 두 번 터치하고<span
lang=EN-US> SHOW </span>버튼을 터치해 봅니다<span lang=EN-US>. </span>화면 위<span
lang=EN-US> display </span>텍스트뷰에 숫자가 나타납니다<span lang=EN-US>. </span>단<span
lang=EN-US>, </span>터치한 횟수만큼 나타나지 않고 더 큰 수가 나타납니다<span lang=EN-US>. </span>한 번의
터치에 여러 개의 터치이벤트가 발생하기 때문입니다<span lang=EN-US>. </span>각 터치마다<span lang=EN-US>
ACTION_DOWN </span>이벤트<span lang=EN-US>, ACTION_UP </span>이벤트가 기본적으로 발생하고<span
lang=EN-US>, </span>하드웨어 기기에서 물리적으로 터치할 때는 손가락의 미세한 움직임 때문에<span lang=EN-US>
ACTION_MOVE</span>도 추가로 발생할 수 있습니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>이렇게 하면 완성된 것 같지만 아직 해결할 문제가 남아 있습니다<span lang=EN-US>. </span>기기를
회전시켜 보세요<span lang=EN-US>. </span>앱이 죽어 버립니다<span lang=EN-US>. </span>왜 그럴까요<span
lang=EN-US>?<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>아래 그림 맨 아래 빨간 네모<span lang=EN-US>, Android Monitor</span>를
클릭하면 에러 메세지를 볼 수 있습니다<span lang=EN-US>. MainAcivity.java 51</span>번 줄을 실행할 때<span
lang=EN-US> NullPointerException</span>이 발생했습니다<span lang=EN-US>. </span>이<span
lang=EN-US> Exception</span>은 참조변수에<span lang=EN-US> null</span>이 들어 있는 상태에서 그 참조변수를
이용해 메소드를 호출할 때 발생합니다<span lang=EN-US>. </span>에러메세지를 자세히 보면<span lang=EN-US>
getView </span>메소드를 호출할 때<span lang=EN-US> null reference</span>에 대고 호출했다 이렇게 설명하고
있습니다<span lang=EN-US>. </span>맨 위 빨간 네모 부분<span lang=EN-US>,
firstFragment.getView() </span>호출에서<span lang=EN-US> firstFragment</span>에<span
lang=EN-US> null</span>이 들어 있는 것입니다<span lang=EN-US>. <o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="그림_x0020_33"
 o:spid="_x0000_i1060" type="#_x0000_t75" style='width:834.75pt;height:296.25pt;
 visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image035.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img border=0 width=1113 height=395
src="제5주_프래그먼트.files/image035.png" v:shapes="그림_x0020_33"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>여기에 왜<span lang=EN-US> null</span>이 들어 있을까요<span
lang=EN-US>? firstFragment</span>는<span lang=EN-US> MainActivity</span>의 필드<span
lang=EN-US>(</span>상태변수<span lang=EN-US>)</span>로서 우리가 선언한 것입니다<span
lang=EN-US>. </span>안드로이드 시스템이 액티비티를 파괴했다가 다시만들 때 프로그래머가 선언한 상태변수까지도 알아서 복원해 주지는
않습니다<span lang=EN-US>. </span>액티비티가 불시에 파괴됐다가 다시 만들어지는 경우에 대한 대비를 우리가 해야 합니다<span
lang=EN-US>. </span>어떻게 해야 할까요<span lang=EN-US>?<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'>onSaveInstanceState </span><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>메소드에서<span lang=EN-US> firstFragment </span>필드를 번들에 저장하고<span
lang=EN-US> onRestoreInstanceState</span>에서 번들로부터 레퍼런스 값을 읽어<span lang=EN-US>
firstFragment </span>필드에 넣어주면 될까요<span lang=EN-US>? </span>그렇지 않습니다<span
lang=EN-US>. </span>액티비티가 파괴될 때 프래그먼트도 함께 파괴되고 액티비티가 새로 만들어질 때 프래그먼트도 새로 만들어지기 때문에
프로그먼트를 가리키는 레퍼런스 자체가 변하므로 예전의 레퍼런스를 저장하는 것은 쓸모 없는 일입니다<span lang=EN-US>. </span>새로
만들어진 프래그먼트를 가리키는 레퍼런스를 새로 얻어<span lang=EN-US> firstFragment </span>필드에 넣어 주어야 합니다<span
lang=EN-US>. <o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>액티비티에서 내부에 있는 프래그먼트를 가리키는 레퍼런스를 얻는 방법은 강의자료 중<span
lang=EN-US> &quot;</span>액티비티와의 통신<span lang=EN-US>&quot; </span>제목의 슬라이드에 나와 있습니다<span
lang=EN-US>. </span>이 방법으로 프래그먼트 레퍼런스를 얻어<span lang=EN-US> firstFragment </span>필드를
새로 설정하는 일은 어느 시점에 해야 할까요<span lang=EN-US>? </span>당연히 프래그먼트가 완전히 만들어진 후에 해야 합니다<span
lang=EN-US>. </span>프래그먼트는 언제 만들어질까요<span lang=EN-US>? </span>기기가 회전하면 액티비티가 새로
만들어지면서 액티비티의<span lang=EN-US> onCreate </span>메소드가 호출됩니다<span lang=EN-US>. </span>액티비티가
새로 만들어질 때 그 안에 있던 프래그먼트들도 새로 만들어지면서 프래그먼트의<span lang=EN-US> onAttatch,
onCreate, onCreateView, onActivityCreated </span>메소드가 차례로 호출됩니다<span
lang=EN-US>. (</span>아래 그림 참고<span lang=EN-US>) </span>그러니까 액티비티에<span
lang=EN-US> onStart</span>가 호출된 때는 이미 프래그먼트와 그 내부의<span lang=EN-US> view</span>가
완성되어 있습니다<span lang=EN-US>. </span>그러니까 새로 만들어진 프래그먼트 레퍼런스를 얻고 그 안에 있는<span
lang=EN-US> TextView </span>레퍼런스를 얻는 일을 액티비티의<span lang=EN-US> onStart</span>에서
하면 됩니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="Picture_x0020_2"
 o:spid="_x0000_i1059" type="#_x0000_t75" alt="https://developer.android.com/images/activity_fragment_lifecycle.png"
 style='width:255pt;height:506.25pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image036.png" o:title="activity_fragment_lifecycle"/>
</v:shape><![endif]--><![if !vml]><img border=0 width=340 height=675
src="제5주_프래그먼트.files/image036.png"
alt="https://developer.android.com/images/activity_fragment_lifecycle.png"
v:shapes="Picture_x0020_2"><![endif]></span><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>이렇게 액티비티가 파괴됐다가 새로 만들어질 때<span lang=EN-US>
firstFragment </span>필드를 재설정해 주는 코드를 보완하고 나서 앱을 실행하고 기기를 돌려보면 앱이 죽지 않고 제대로 작동하는
것을 확인할 수 있습니다<span lang=EN-US>. TOUCH </span>버튼과<span lang=EN-US> SHOW </span>버튼의
위치는 마음에 들지 않을 것입니다<span lang=EN-US>. </span>예쁘게 보이게 하려면 가로 방향으로 볼 때 적용할 레이아웃<span
lang=EN-US> xml </span>파일을 따로 만들어 주어야 합니다<span lang=EN-US>. </span>이에 대해서는 다음에 공부합니다<span
lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>그런데 여전히 부족한 게 남아 있습니다<span lang=EN-US>. </span>앱 실행 후<span
lang=EN-US> TOUCH </span>버튼을 한 두 번 터치하고 나서<span lang=EN-US> SHOW </span>버튼을 터치하면
화면 위쪽에 터치 횟수 숫자가 보입니다<span lang=EN-US>. </span>이 상태에서 기기를 회전하면 터치 횟수가 보존될까요<span
lang=EN-US>? </span>아니면<span lang=EN-US> 0</span>으로 리셋될까요<span lang=EN-US>? <o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>안드로이드 시스템이 액티비티를 파괴했다가 다시 만들 때 그 안에 있던<span
lang=EN-US> View</span>를 복원하고 각<span lang=EN-US> View</span>의 상태정보도 복원해줍니다<span
lang=EN-US>. </span>액티비티 안에 들어 있던 프래그먼트도 마찬가지로 복원해 줍니다<span lang=EN-US>. </span>그러나
프래그먼트 안에 들어 있던<span lang=EN-US> View</span>는 다릅니다<span lang=EN-US>. </span>우리는 프래그먼트가
만들어질 때 프래그먼트 안의<span lang=EN-US> View</span>는 지정된 레이아웃 파일로부터 완전히 새로 부불려 만들도록 했습니다<span
lang=EN-US>. </span>새로 부풀려 만들어진<span lang=EN-US> View</span>들의 상태정보까지 안드로이드 시스템이
복원해 주지는 않습니다<span lang=EN-US>. </span>완전히 새로운 것이기 때문입니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'>count </span><span style='mso-bidi-font-size:10.0pt;
line-height:150%'>필드는<span lang=EN-US> SecondFragment </span>들어 있습니다<span
lang=EN-US>. </span>강제 파괴되어 새로 만들어지는 경우에 이 필드의 값을 저장하려면<span lang=EN-US>
SecondFragment </span>클래스의<span lang=EN-US> onSaveInstanceState </span>메소드를 이용하고<span
lang=EN-US>, </span>값을 복원하려면<span lang=EN-US> onCreate, onCreateView, </span>혹은<span
lang=EN-US> onActivityCreated </span>메소드를 이용합니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>앱 실행 후<span lang=EN-US> TOUCH </span>버튼을 한 두 번 터치하고 나서<span
lang=EN-US> SHOW </span>버튼을 터치하면 화면 위쪽에 터치 횟수 숫자가 보입니다<span lang=EN-US>. </span>이
상태에서 기기를 회전하면 터치 횟수가<span lang=EN-US> 0</span>으로 바뀝니다<span lang=EN-US>. </span>이
상태에서<span lang=EN-US> SHOW </span>버튼을 터치하면 돌리기 전에 보이던 숫자가 보이도록 코드를 수정하시오<span
lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'>---------------------------<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>앱 실행 후<span lang=EN-US> TOUCH </span>버튼을 한 두 번 터치하고 나서<span
lang=EN-US> SHOW </span>버튼을 터치하면 화면 위쪽에 터치 횟수 숫자가 보입니다<span lang=EN-US>. </span>이
상태에서 기기를 회전하면 터치 횟수가 유지되게 하려면 어떻게 하면 될까요<span lang=EN-US>? <o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'>(1)<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'>SecondFragment</span><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>에<span lang=EN-US> onResume </span>메소드를 재정의하면서 이 곳에서<span
lang=EN-US> listener.onShowButtonTouch(count); </span>메소드를 호출하는 수가 있습니다<span
lang=EN-US>. </span>화면이 새로 보일 때면 무조건<span lang=EN-US> SHOW </span>버튼이 터치된 것처럼 해
주는 것이지요<span lang=EN-US>. </span>그러나 이렇게 하는 방법은 완전하지 않습니다<span lang=EN-US>.
TOUCH</span>만 하고<span lang=EN-US> SHOW</span>는 아직 하지 않은 상태에서 기기를 돌리면<span
lang=EN-US> SHOW</span>를 한 것처럼<span lang=EN-US> display</span>가 갱신됩니다<span
lang=EN-US>. </span>이것은 자연스럽지 않습니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'>(2)<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>다른 방법은 액티비티에 별도의 상태변수<span lang=EN-US>(</span>가령<span
lang=EN-US> shownCount)</span>를 두는 것입니다<span lang=EN-US>. display</span>에 출력할 때마다
출력하는 값을 이 상태변수에 저장해 두는 것이지요<span lang=EN-US>. </span>물론 비정상적으로 파괴될 때에 대비하여 적절한 시점<span
lang=EN-US>(onSaveInstanceState)</span>에 이 상태변수를 저장하고 비정상적 파괴 후 다시 생성될 때는 적절한 시점<span
lang=EN-US>(onRestoreInstanceState &lt;-- </span>파라미터 두 개 짜리도 있는데 그것 말고 파라미터 하나짜리여야
함<span lang=EN-US>!)</span>에 복원하는 조치를 해야 합니다<span lang=EN-US>. </span>또<span
lang=EN-US> Resumed </span>상태로 진입할 때마다 이 상태변수 값을 화면에 출력하도록 해야 합니다<span
lang=EN-US>. </span>이 방법으로 프로그램을 개선하시오<span lang=EN-US>. </span>앱 실행 후<span
lang=EN-US> TOUCH </span>버튼을 한 두 번 터치하고 나서<span lang=EN-US> SHOW </span>버튼을 터치하면
화면 위쪽에 터치 횟수 숫자가 보입니다<span lang=EN-US>. </span>이 상태에서<span lang=EN-US> TOUCH</span>를
<span style='color:red'>한 두 번 더 터치한 후</span><span lang=EN-US>, </span>기기를 회전하면 회전
직전에 화면에 보이던 터치 횟수가 유지되어야 하며<span lang=EN-US>, </span>이 상태에서 <span lang=EN-US
style='color:red'>TOUCH </span><span style='color:red'>없이</span><span
lang=EN-US> SHOW</span>를 한 번 터치하면 터치 횟수가 증가해야 합니다<span lang=EN-US>. <o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>마지막으로<span lang=EN-US>, </span>터치 한 번에 숫자가 하나씩만 증가하도록 코드를
수정하시오<span lang=EN-US>. MotionEvent</span>가<span lang=EN-US>
MotionEvent.ACTION_DOWN</span>일 때만 카운트를 하면 됩니다<span lang=EN-US>(MotionEvent.ACTION_UP,
MotionEvent.ACTION_MOVE </span>등은 무시<span lang=EN-US>). </span>터치 한 번에<span
lang=EN-US> MotionEvent.ACTION_DOWN</span>는 딱 한 번만 발생하기 때문입니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><a href="videos/TouchFragment.mp4"><span lang=EN-US><span
lang=EN-US>동영상 (</span></span><span lang=EN-US><span lang=EN-US>소리</span></span><span
lang=EN-US><span lang=EN-US> </span></span><span lang=EN-US><span lang=EN-US>있음)</span></span></a><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:20.0pt;text-indent:-20.0pt;mso-char-indent-count:
-2.0;line-height:150%'><span lang=EN-US style='mso-bidi-font-size:10.0pt;
line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoListParagraph style='margin-left:18.0pt;mso-para-margin-left:0gd;
text-indent:-18.0pt;line-height:150%;mso-list:l0 level1 lfo2'><![if !supportLists]><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-size:11.0pt;
mso-bidi-font-size:10.0pt;line-height:150%;mso-fareast-font-family:"맑은 고딕";
mso-fareast-theme-font:minor-latin;mso-bidi-font-family:"맑은 고딕";mso-bidi-theme-font:
minor-latin'><span style='mso-list:Ignore'>4.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span></span></b><![endif]><b style='mso-bidi-font-weight:normal'><span
lang=EN-US style='font-size:11.0pt;mso-bidi-font-size:10.0pt;line-height:150%'>(ListView)<o:p></o:p></span></b></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>프래그먼트는 여러 가지 용도로 사용되지만 대표적인 예가 바로 목록과 목록에 있는 항목을 보여 주는
경우입니다<span lang=EN-US>. </span>아래 동영상을 먼저 보세요<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><a href="videos/Lyrics_Activity.mp4"><span lang=EN-US><span
lang=EN-US>동영상</span></span></a><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>우리는 이 문제에서 우선 프래그먼트 없이 액티비티로만 이 동영상의 앱을 구현합니다<span
lang=EN-US>. </span>다음 문제에서 프래그먼트를 사용하는 연습을 할 것입니다<span lang=EN-US>. <o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>위 동영상은 프래그먼트 없이 액티비티만을 사용해서 만든 앱의 동작을 보이고 있습니다<span
lang=EN-US>. </span>이런 형태의 화면에서 목록을 보여주기 위해서는<span lang=EN-US> ListView</span>를
사용합니다<span lang=EN-US>. ListView</span>의 사용법에 관한 아래 자료를 먼저 읽어 보세요<span
lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><a href="http://recipes4dev.tistory.com/42">http://recipes4dev.tistory.com/42</a><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>새 프로젝트를 만듭니다<span lang=EN-US>. </span>프로젝트 이름은<span
lang=EN-US> Lyrics</span>로 짓습니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="그림_x0020_34"
 o:spid="_x0000_i1058" type="#_x0000_t75" style='width:271.5pt;height:225pt;
 visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image037.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img border=0 width=362 height=300
src="제5주_프래그먼트.files/image037.png" v:shapes="그림_x0020_34"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>레이아웃을 정해줍니다<span lang=EN-US>. ListView</span>와<span
lang=EN-US> TextView</span>는 자바 코드에서 레퍼런스를 필요로 하므로 적절한 이름의<span lang=EN-US> id</span>를
정해줍니다<span lang=EN-US> (titlesList, lyricsTextView).<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="그림_x0020_35"
 o:spid="_x0000_i1057" type="#_x0000_t75" style='width:728.25pt;height:316.5pt;
 visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image038.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img border=0 width=971 height=422
src="제5주_프래그먼트.files/image038.png" v:shapes="그림_x0020_35"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>노래 목록과 각 노래의 가사가 들어 있는 클래스를 작성합니다<span lang=EN-US>. </span>목록과
가사는 클래스의<span lang=EN-US> static field</span>로 선언되어 있으므로<span lang=EN-US>
SongData.Title[3]</span>과 같은 형식으로 읽을 수 있습니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="그림_x0020_36"
 o:spid="_x0000_i1056" type="#_x0000_t75" style='width:924pt;height:170.25pt;
 visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image039.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img border=0 width=1232 height=227
src="제5주_프래그먼트.files/image039.png" v:shapes="그림_x0020_36"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>다음에는<span lang=EN-US> MainActivity.java </span>파일을 열고 코드를
추가합니다<span lang=EN-US>. </span>이 문제 첫머리에서 소개한<span lang=EN-US> ListView</span>의
사용법에 관한 자료에 설명되어 있듯이<span lang=EN-US> ListView</span>를 만들기 위해서는<span
lang=EN-US> ArrayAdaptor&lt;String&gt; </span>인스턴스를 먼저 구성합니다<span lang=EN-US>.
SongData</span>가<span lang=EN-US> String </span>타입 자료이므로<span lang=EN-US>
ArrayAdaptor&lt;<span style='color:red'>String</span>&gt; </span>객체를 구성합니다<span
lang=EN-US>. <o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="그림_x0020_37"
 o:spid="_x0000_i1055" type="#_x0000_t75" style='width:338.25pt;height:179.25pt;
 visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image040.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img border=0 width=451 height=239
src="제5주_프래그먼트.files/image040.png" v:shapes="그림_x0020_37"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>위 코드에서<span lang=EN-US> ArrayAdaptor </span>클래스 구성자의 첫
인자는<span lang=EN-US> Context</span>입니다<span lang=EN-US>. Activity</span>는<span
lang=EN-US> Context</span>의 서브클래스이므로 액티비티 자신을 나타내는<span lang=EN-US> this</span>를
주었습니다<span lang=EN-US>. </span>두 번째 인자는<span lang=EN-US> ListView </span>안의 각<span
lang=EN-US> item(</span>항목<span lang=EN-US>)</span>을 화면에 그릴 때 사용할 레이아웃 리소스입니다<span
lang=EN-US>. android.R.layout</span>에는 여러 가지 안드로이드 표준 레이아웃들이 미리 만들어져 있는데 그 중 가장
간단한<span lang=EN-US> (</span>문자열만 하나 보여주는<span lang=EN-US>) </span>레이아웃을 주었습니다<span
lang=EN-US>. </span>세 번째 인자는<span lang=EN-US> ListView</span>에 표시할 데이터 소스입니다<span
lang=EN-US>. </span>노래 제목 목록으로서<span lang=EN-US> String</span>의 배열 타입입니다<span
lang=EN-US>. </span>마지막 문장은 목록 중 한 항목만 선택할 수 있게 설정합니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>이어서 아래 코드를 추가합니다<span lang=EN-US>. </span>리스트 항목 중 어느 하나를
선택할 때 발생하는 이벤트를 처리하는 리스너를 등록하는 코드입니다<span lang=EN-US>. <o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="그림_x0020_38"
 o:spid="_x0000_i1054" type="#_x0000_t75" style='width:348pt;height:137.25pt;
 visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image041.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img border=0 width=464 height=183
src="제5주_프래그먼트.files/image041.png" v:shapes="그림_x0020_38"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>위 코드에서<span lang=EN-US> AdaptorView</span>는<span
lang=EN-US> ListView</span>의 슈퍼클래스입니다<span lang=EN-US>. AdaptorView</span>의 서브클래스에는<span
lang=EN-US> ListView</span>와<span lang=EN-US> GridView </span>등이 있습니다<span
lang=EN-US>. </span>이벤트 선택에 따라 안드로이드 시스템이<span lang=EN-US> onItemClick </span>메소드를
호출해 줄 때는 네 개의 값을 보내 주는데 그 중 첫 번째 값은<span lang=EN-US> AdaptorView</span>이고<span
lang=EN-US>, </span>두 번째 값은 선택된 항목이며<span lang=EN-US>, </span>세 번째 값은 선택된 항목이 리스트의
몇 번<span lang=EN-US> (0</span>번부터 시작<span lang=EN-US>) </span>항목인지를 나타냅니다<span
lang=EN-US>. </span>네 번째 값은 선택된 항목의<span lang=EN-US> id</span>입니다<span
lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>위 코드의<span lang=EN-US> lyricsTextView</span>는 액티비티 클래스의
필드로 선언해 주어야 합니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>이렇게 하고 앱을 실행하면 원하는 화면에 나타납니다<span lang=EN-US>. </span>그러나
기기를 옆으로 돌리면 여전히 리스트와 가사가 아래 위로 배치되어 부자연스럽습니다<span lang=EN-US>. </span>옆으로 돌리면 리스트와
가사가 좌우로 배치되도록 해야 하겠습니다<span lang=EN-US>. </span>그러기 위해서는<span lang=EN-US>
activity_main.xml </span>파일을 기본 방향용에 추가하여 가로 방향용을 만들어야 합니다<span lang=EN-US>.
res </span>디렉토리 아래에<span lang=EN-US> layout </span>디렉토리가 있고 그 아래에<span
lang=EN-US> activity_main.xml </span>파일이 있는데<span lang=EN-US> res </span>디렉토리 아래에<span
lang=EN-US> layout-land </span>디렉토리를 추가하고 그 아래에 같은 이름의 파일<span lang=EN-US>
(activity_main.xml)</span>을 만듭니다<span lang=EN-US>. </span>아래 그림의 절차를 따르면 됩니다<span
lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="그림_x0020_39"
 o:spid="_x0000_i1053" type="#_x0000_t75" style='width:669pt;height:265.5pt;
 visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image042.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img border=0 width=892 height=354
src="제5주_프래그먼트.files/image042.png" v:shapes="그림_x0020_39"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="그림_x0020_40"
 o:spid="_x0000_i1052" type="#_x0000_t75" style='width:386.25pt;height:162.75pt;
 visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image043.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img border=0 width=515 height=217
src="제5주_프래그먼트.files/image043.png" v:shapes="그림_x0020_40"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>새 디렉토리를 만든 후에도 화면에 디렉토리가 보이지 않습니다<span lang=EN-US>. </span>아래
그림처럼<span lang=EN-US> Project</span>를 선택하고 서브디렉토리들을 펼쳐야 보입니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="그림_x0020_41"
 o:spid="_x0000_i1051" type="#_x0000_t75" style='width:254.25pt;height:331.5pt;
 visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image044.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img border=0 width=339 height=442
src="제5주_프래그먼트.files/image044.png" v:shapes="그림_x0020_41"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'>Activity_main.xml </span><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>파일을 복사하여<span lang=EN-US> layout-land </span>디렉토리에 붙여 넣고
목록과 가사가 옆으로 나란히 보이도록 수정합니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="그림_x0020_42"
 o:spid="_x0000_i1050" type="#_x0000_t75" style='width:915.75pt;height:234pt;
 visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image045.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img border=0 width=1221 height=312
src="제5주_프래그먼트.files/image045.png" v:shapes="그림_x0020_42"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>이제 앱을 실행하면 동영상처럼 작동합니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>그러나 아직 아쉬운 점이 남아 있습니다<span lang=EN-US>. </span>어떤 노래 가사를
보고 있는 상태에서 기기를 회전하면 가사가 사라집니다<span lang=EN-US>. </span>액티비티는 내부에 들어 있는<span
lang=EN-US> View</span>들의 상태를 알아서 저장하고 복원하는 기능을 갖고 있지만 <span style='color:red'>프로그래머가
작성한 코드에 의해 만들어진 상태</span>는 그렇게 해 주지 않습니다<span lang=EN-US>. </span>우리 앱에서 가사를 보여주는
일을 하는 것은 우리가 작성한 리스너 코드입니다<span lang=EN-US>. </span>리스너 코드가 만든 상태<span
lang=EN-US>(</span>화면에 어떤 노래의 가사가 보이는가 &#8211; 즉<span lang=EN-US>, </span>목록 중 몇 번 노래<span
lang=EN-US>)</span>를 저장하고 복원하는 것은 프로그래머의 책임입니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>몇 번 노래가 화면에 보이는가를 나타내는 필드를 하나 선언하고 이 필드를 적당한 시점<span
lang=EN-US>(onSaveInstanceState)</span>에 저장하고 적당한 시점<span lang=EN-US>(onRestoreInstanceState)</span>에
복원하여 화면에 보이게 해 주면 됩니다<span lang=EN-US>. </span>아래 동영상처럼 어떤 노래의 가사가 보이는 상태에서 기기를
돌리면 그 노래의 가사가 유지되어야 하고<span lang=EN-US>, </span><span style='color:red'>가사가 보이지
않는 상태에서 돌리면 가사가 보이지 않는 상태가 유지되어야 합니다<span lang=EN-US>.</span></span><span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><a href="videos/Lyrics_Activity2.mp4"><span
lang=EN-US><span lang=EN-US>동영상</span></span></a><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoListParagraph style='margin-left:18.0pt;mso-para-margin-left:0gd;
text-indent:-18.0pt;line-height:150%;mso-list:l0 level1 lfo2'><![if !supportLists]><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-size:11.0pt;
mso-bidi-font-size:10.0pt;line-height:150%;mso-fareast-font-family:"맑은 고딕";
mso-fareast-theme-font:minor-latin;mso-bidi-font-family:"맑은 고딕";mso-bidi-theme-font:
minor-latin'><span style='mso-list:Ignore'>5.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span></span></b><![endif]><b style='mso-bidi-font-weight:normal'><span
lang=EN-US style='font-size:11.0pt;mso-bidi-font-size:10.0pt;line-height:150%'>(ListFragment
</span></b><b style='mso-bidi-font-weight:normal'><span style='font-size:11.0pt;
mso-bidi-font-size:10.0pt;line-height:150%'>사용<span lang=EN-US>)<o:p></o:p></span></span></b></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
style='mso-bidi-font-size:10.0pt;line-height:150%'>이번에는 노래 목록과 가사를 각각 프래그먼트로 작성하고
액티티비는 이 두 개의 프래그먼트를 포함하도록 해 봅니다<span lang=EN-US>. </span>위<span lang=EN-US> 1</span>번과<span
lang=EN-US> 2</span>번 방식 중<span lang=EN-US> 1</span>번 방식<span lang=EN-US>(xml </span>레이아웃
파일에 의해 프래그먼트가 액티비티에 자동으로 붙여지는 방법<span lang=EN-US>)</span>을 적용합니다<span
lang=EN-US>. </span>이것이 단순하기 때문입니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
style='mso-bidi-font-size:10.0pt;line-height:150%'>또 목록을 보여주는 데 주로 사용하는<span
lang=EN-US> ListFragment</span>를 사용할 것입니다<span lang=EN-US>. ListFragment</span>에
관한 참고자료를 먼저 읽어보세요<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><a
href="http://recipes4dev.tistory.com/62">http://recipes4dev.tistory.com/62</a><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
style='mso-bidi-font-size:10.0pt;line-height:150%'>프로젝트를 새로 만듭니다<span
lang=EN-US>. <o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="_x0000_i1049" type="#_x0000_t75" style='width:324.75pt;height:220.5pt;
 visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image046.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img border=0 width=433 height=294
src="제5주_프래그먼트.files/image046.png" v:shapes="_x0000_i1049"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
style='mso-bidi-font-size:10.0pt;line-height:150%'>두 개의 프래그먼트 서브클래스를 작성합니다<span
lang=EN-US>. </span>하나는<span lang=EN-US> TitlesFragment </span>다른 하나는<span
lang=EN-US> LyricsFragment</span>로 이름을 짓습니다<span lang=EN-US>. </span>우선<span
lang=EN-US> LyricsFragment</span>를 작성합니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="그림_x0020_43" o:spid="_x0000_i1048" type="#_x0000_t75" style='width:550.5pt;
 height:123pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image047.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img border=0 width=734 height=164
src="제5주_프래그먼트.files/image047.png" v:shapes="그림_x0020_43"><![endif]><span
style='mso-spacerun:yes'>&nbsp;</span><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="그림_x0020_44" o:spid="_x0000_i1047" type="#_x0000_t75" style='width:356.25pt;
 height:47.25pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image048.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img border=0 width=475 height=63
src="제5주_프래그먼트.files/image048.png" v:shapes="그림_x0020_44"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="그림_x0020_45" o:spid="_x0000_i1046" type="#_x0000_t75" style='width:401.25pt;
 height:181.5pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image049.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img border=0 width=535 height=242
src="제5주_프래그먼트.files/image049.png" v:shapes="그림_x0020_45"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'>TitlesFragment</span><span
style='mso-bidi-font-size:10.0pt;line-height:150%'>는<span lang=EN-US> Fragment</span>의
서브클래스인<span lang=EN-US> ListFragment</span>의 서브클래스로 작성할 것입니다<span lang=EN-US>.
ListFragment</span>는 스스로 정해진<span lang=EN-US> UI</span>를 이미 갖고 있으므로<span
lang=EN-US> layout XML </span>파일이 필요 없습니다<span lang=EN-US>. </span>그러니까<span
lang=EN-US> TitlesFragment </span>클래스를 작성할 때는 위 세 번째 그림에서<span lang=EN-US>
Create layout XML </span>체크를 해제해 줍니다<span lang=EN-US>. TitlesFragment </span>생성
후 자동으로 입력되는 <span lang=EN-US>onCreateView</span>에 대한 코드도 삭제합니다<span lang=EN-US>.
SongData</span>는 이전 프로젝트에서 복사해 옵니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="그림_x0020_46" o:spid="_x0000_i1045" type="#_x0000_t75" style='width:183.75pt;
 height:113.25pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image050.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img border=0 width=245 height=151
src="제5주_프래그먼트.files/image050.png" v:shapes="그림_x0020_46"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
style='mso-bidi-font-size:10.0pt;line-height:150%'>이제<span lang=EN-US>
activity_main.xml </span>파일을 수정합니다<span lang=EN-US>. </span>위 과제<span
lang=EN-US> 1</span>번에서 했던 방법으로 프래그먼트 두 개를 배치합니다<span lang=EN-US>. </span>각 프래그먼트에<span
lang=EN-US> id</span>를 부여합니다<span lang=EN-US>. titlesFragment</span>가 위에 있어야 합니다<span
lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="_x0000_i1044" type="#_x0000_t75" style='width:806.25pt;height:420.75pt;
 visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image051.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img border=0 width=1075 height=561
src="제5주_프래그먼트.files/image051.png" v:shapes="_x0000_i1044"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
style='mso-bidi-font-size:10.0pt;line-height:150%'>가로 방향 레이아웃도 만들어 줍니다<span
lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="그림_x0020_49" o:spid="_x0000_i1043" type="#_x0000_t75" style='width:465.75pt;
 height:90.75pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image052.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img border=0 width=621 height=121
src="제5주_프래그먼트.files/image052.png" v:shapes="그림_x0020_49"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'>fragment_lyrics.xml</span><span
style='mso-bidi-font-size:10.0pt;line-height:150%'>를 아래 그림처럼 수정해 줍니다<span
lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="그림_x0020_48" o:spid="_x0000_i1042" type="#_x0000_t75" style='width:471pt;
 height:90.75pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image053.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img border=0 width=628 height=121
src="제5주_프래그먼트.files/image053.png" v:shapes="그림_x0020_48"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
style='mso-bidi-font-size:10.0pt;line-height:150%'>다음으로는<span lang=EN-US>
TitlesFragment.java </span>파일을 열고<span lang=EN-US> TitlesFragment </span>클래스가<span
lang=EN-US> ListFragment</span>를 확장하도록 수정합니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="그림_x0020_50" o:spid="_x0000_i1041" type="#_x0000_t75" style='width:542.25pt;
 height:75.75pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image054.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img border=0 width=723 height=101
src="제5주_프래그먼트.files/image054.png" v:shapes="그림_x0020_50"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'>ListFragment</span><span
style='mso-bidi-font-size:10.0pt;line-height:150%'>는 두 가지가 있는데<span lang=EN-US>
support.v4.app </span>패키지 것을 선택합니다<span lang=EN-US>. <o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="그림_x0020_51" o:spid="_x0000_i1040" type="#_x0000_t75" style='width:485.25pt;
 height:102.75pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image055.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img border=0 width=647 height=137
src="제5주_프래그먼트.files/image055.png" v:shapes="그림_x0020_51"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
style='mso-bidi-font-size:10.0pt;line-height:150%'>그리고 리스트를 노래 제목 목록으로 채워 줍니다<span
lang=EN-US>. </span>이 작업은<span lang=EN-US> onCreateView</span>가 실행된 후<span
lang=EN-US> onActivityCreated</span>에서 하는 것이 좋습니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="그림_x0020_59" o:spid="_x0000_i1039" type="#_x0000_t75" style='width:404.25pt;
 height:141pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image056.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img border=0 width=539 height=188
src="제5주_프래그먼트.files/image056.png" v:shapes="그림_x0020_59"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'>ListFragment</span><span
style='mso-bidi-font-size:10.0pt;line-height:150%'>의 경우에는 스스로 완성된 레이아웃을 이미 가지고 있기
때문에 부풀리기는 하지 않습니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
style='mso-bidi-font-size:10.0pt;line-height:150%'>아래 코드를 추가로 넣어 줄 수 있습니다<span
lang=EN-US>. </span>선택된 아이템이 다른 색깔로 표시되도록 모드를 설정하는 코드입니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="그림_x0020_60" o:spid="_x0000_i1038" type="#_x0000_t75" style='width:388.5pt;
 height:141.75pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image057.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img border=0 width=518 height=189
src="제5주_프래그먼트.files/image057.png" v:shapes="그림_x0020_60"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'>LyricsFragment.java
</span><span style='mso-bidi-font-size:10.0pt;line-height:150%'>파일을 보면 아래와 같습니다<span
lang=EN-US>. Xml </span>레이아웃 파일을 통해 프래그먼트를 액티비티에 넣어 놓았기 때문에 프래그먼트 객체를 생성하고 프래그먼트를
컨테이너에 넣어주는 프로그먼트 트랜잭션은 수행하지 않습니다<span lang=EN-US>. fragment_lyrics.xml </span>레이아웃을
부풀려<span lang=EN-US> View</span>를 생성해 주는 작업은 필요합니다<span lang=EN-US>. </span>이 작업을
수행하는 코드는 자동으로 만들어져 있습니다<span lang=EN-US>. <o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="그림_x0020_52" o:spid="_x0000_i1037" type="#_x0000_t75" style='width:381.75pt;
 height:204pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image058.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img border=0 width=509 height=272
src="제5주_프래그먼트.files/image058.png" v:shapes="그림_x0020_52"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
style='mso-bidi-font-size:10.0pt;line-height:150%'>액티비티는 목록에 있는 노래 중 몇 번째 노래 가사를
보이도록<span lang=EN-US> LyricsFragment</span>에게 요청할 것입니다<span lang=EN-US>. </span>이에
필요한 메소드를 갖추어야 합니다<span lang=EN-US>. </span>아래와 같이 구현하면 됩니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="_x0000_i1036" type="#_x0000_t75" style='width:412.5pt;height:92.25pt;
 visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image059.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img border=0 width=550 height=123
src="제5주_프래그먼트.files/image059.png" v:shapes="_x0000_i1036"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'>MainActivity.java</span><span
style='mso-bidi-font-size:10.0pt;line-height:150%'>는 수정할 필요가 없습니다<span
lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;</span><!--[if gte vml 1]><v:shape id="그림_x0020_55"
 o:spid="_x0000_i1035" type="#_x0000_t75" style='width:4in;height:117.75pt;
 visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image060.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img border=0 width=384 height=157
src="제5주_프래그먼트.files/image060.png" v:shapes="그림_x0020_55"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
style='mso-bidi-font-size:10.0pt;line-height:150%'>앱을 실행하면 기본 화면이 나타납니다<span
lang=EN-US>. </span>기기를 회전해도 잘 보입니다<span lang=EN-US>. </span>그러나 아직 버튼 클릭에 대한 반응도
없고 가사도 보이지 않습니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
style='mso-bidi-font-size:10.0pt;line-height:150%'>이제 노래 선택에 대해 반응을 보이게 해 봅시다<span
lang=EN-US>. </span>지금까지 공부한 내용을 적용하면 됩니다<span lang=EN-US>. TitlesFragment</span>에서
아이템클릭이벤트가 발생하면 아이템클릭이벤트 리스너가 액티비티의 메소드를 호출하게 합니다<span lang=EN-US>. </span>액티비티의
메소드는<span lang=EN-US> LyricsFragment</span>에게 노래 번호를 알려주면서 해당 노래 가사를 출력하도록 지시하면
됩니다<span lang=EN-US>. </span>아래 흐름으로 작업을 진행합니다<span lang=EN-US>. </span>기본적으로 위
문제<span lang=EN-US> 3</span>번에서 했던 일과 다르지 않습니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'>(1)
TitlesFragment</span><span style='mso-bidi-font-size:10.0pt;line-height:150%'>가
액티비티에게 리스트 항목 선택 이벤트가 발생했다는 것을 알리는 데 사용할 인터페이스를<span lang=EN-US> TitlesFragment
</span>안에 선언합니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="그림_x0020_56" o:spid="_x0000_i1034" type="#_x0000_t75" style='width:258pt;
 height:55.5pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image061.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img border=0 width=344 height=74
src="제5주_프래그먼트.files/image061.png" v:shapes="그림_x0020_56"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'>(2) </span><span
style='mso-bidi-font-size:10.0pt;line-height:150%'>액티비티가 이 인터페이스를 구현합니다<span
lang=EN-US>. </span>그렇게 함으로써 액티비티 스스로가<span lang=EN-US> TitleSelectionListener</span>가
됩니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
style='mso-bidi-font-size:10.0pt;line-height:150%'>클래스 헤더에<span lang=EN-US>
implements </span>절을 추가합니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'>onTitleSelect </span><span
style='mso-bidi-font-size:10.0pt;line-height:150%'>메소드를 구현합니다<span lang=EN-US>.
</span>이 메소드에서는<span lang=EN-US> LyricsFragment</span>에게 가사를 업데이트하도록 지시합니다<span
lang=EN-US>. LyricsFragment</span>에게<span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp; </span>updateLyricsView </span>메소드를 호출하면 됩니다<span
lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="그림_x0020_63" o:spid="_x0000_i1033" type="#_x0000_t75" style='width:378.75pt;
 height:78.75pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image062.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img border=0 width=505 height=105
src="제5주_프래그먼트.files/image062.png" v:shapes="그림_x0020_63"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'>(3)
TitlesFragment</span><span style='mso-bidi-font-size:10.0pt;line-height:150%'>에<span
lang=EN-US> TitleSelectionListener </span>타입 레퍼런스 필드를 선언하고<span lang=EN-US>
onAttatch</span>에서 이 필드가 액티비티를 가리키도록 설정합니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'>(4)
TitlesFragment</span><span style='mso-bidi-font-size:10.0pt;line-height:150%'>에<span
lang=EN-US> onListItemClick </span>메소드를 재정의합니다<span lang=EN-US>. </span>이 메소드에서는<span
lang=EN-US> TitleSelectionListener</span>의<span lang=EN-US> onTitleSelect </span>메소드를
호출합니다<span lang=EN-US>. <o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
style='mso-bidi-font-size:10.0pt;line-height:150%'>위 작업을 하고 나서 앱을 실행하면 제대로 동작을 합니다<span
lang=EN-US>. </span>기기를 회전해도 앱이 죽지 않고 제대된 화면이 보이는지 확인합니다<span lang=EN-US>. <o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
style='mso-bidi-font-size:10.0pt;line-height:150%'>어떤 노래 가사를 보고 있는 상태에서 기기를 회전하면
가사가 사라질 것입니다<span lang=EN-US>. </span>위<span lang=EN-US> 4</span>번 문제와 같은 방법으로 이
문제도 해결합니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
style='mso-bidi-font-size:10.0pt;line-height:150%'>위<span lang=EN-US> 4</span>번
문제의 마지막에 있는 동영상과 똑같이 작동해야 합니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
style='mso-bidi-font-size:10.0pt;line-height:150%'>이 프로젝트에서는<span lang=EN-US>
LyricsFragment</span>가 핵심적인 역할을 합니다<span lang=EN-US>. </span>어느 노래 가사를 보여주는지를 이
프래그먼트가 관리하기 때문입니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="그림_x0020_64" o:spid="_x0000_i1032" type="#_x0000_t75" style='width:475.5pt;
 height:380.25pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image063.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img border=0 width=634 height=507
src="제5주_프래그먼트.files/image063.png" v:shapes="그림_x0020_64"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="그림_x0020_61" o:spid="_x0000_i1031" type="#_x0000_t75" style='width:450.75pt;
 height:124.5pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image064.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img border=0 width=601 height=166
src="제5주_프래그먼트.files/image064.png" v:shapes="그림_x0020_61"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%;word-break:keep-all'><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="그림_x0020_62" o:spid="_x0000_i1030" type="#_x0000_t75" style='width:419.25pt;
 height:111.75pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image065.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img border=0 width=559 height=149
src="제5주_프래그먼트.files/image065.png" v:shapes="그림_x0020_62"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoListParagraph style='margin-left:18.0pt;mso-para-margin-left:0gd;
text-indent:-18.0pt;line-height:150%;mso-list:l0 level1 lfo2'><![if !supportLists]><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-size:11.0pt;
mso-bidi-font-size:10.0pt;line-height:150%;mso-fareast-font-family:"맑은 고딕";
mso-fareast-theme-font:minor-latin;mso-bidi-font-family:"맑은 고딕";mso-bidi-theme-font:
minor-latin'><span style='mso-list:Ignore'>6.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span></span></b><![endif]><b style='mso-bidi-font-weight:normal'><span
lang=EN-US style='font-size:11.0pt;mso-bidi-font-size:10.0pt;line-height:150%'>(Fragment
</span></b><b style='mso-bidi-font-weight:normal'><span style='font-size:11.0pt;
mso-bidi-font-size:10.0pt;line-height:150%'>동적으로 사용하기<span lang=EN-US>)<o:p></o:p></span></span></b></p>

<p class=MsoNormal style='margin-left:20.0pt;text-indent:-20.0pt;mso-char-indent-count:
-2.0;line-height:150%'><span lang=EN-US style='mso-bidi-font-size:10.0pt;
line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'>4</span><span style='mso-bidi-font-size:10.0pt;
line-height:150%'>번 문제와<span lang=EN-US> 5</span>번 문제를 비교해 보면 결과는 똑 같습니다<span
lang=EN-US>. </span>그런데<span lang=EN-US> 5</span>번에서는 프래그먼트를 사용한 탓으로 프로그램이 더 복잡해
졌습니다<span lang=EN-US>. </span>이번에는 작은 화면 기기와 큰 화면 기기에서 서로 다르게 작동하는 앱을 작성해 봅니다<span
lang=EN-US>. </span>이 앱에서도 프래그먼트를 사용하는데 프래그먼트를 사용하지 않으면 이런 유연성 있는 앱을 구현하기 어렵습니다<span
lang=EN-US>. </span>프래그먼트를 재사용함으로써 유연성을 얻게 됩니다<span lang=EN-US>. <o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>하나의 앱을 작은 화면기기와 큰 화면 기기에서 실행하고 조작하는 장면을 동영상으로 보세요<span
lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><a href="videos/Lyrics3_Nexus5.mp4"><span lang=EN-US><span
lang=EN-US>동영상</span></span><span lang=EN-US><span lang=EN-US> </span></span><span
lang=EN-US><span lang=EN-US>&#8211; Nexus5</span></span></a><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><a href="videos/Lyrics3_Nexus7.mp4"><span lang=EN-US><span
lang=EN-US>동영상</span></span><span lang=EN-US><span lang=EN-US> </span></span><span
lang=EN-US><span lang=EN-US>&#8211; Nexus7</span></span></a><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>이제 이 앱을 작성해 봅니다<span lang=EN-US>. Lyrics2</span>를 복사하여<span
lang=EN-US> Lyrics3</span>를 만듭니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>먼저 레이아웃을 설정합니다<span lang=EN-US>. </span>작은 화면의 경우 액티비티
안에 하나의 프래그먼트만 보이게 되는데 사용자 조작에 따라 두 개의 프래그먼트가 교대로 보여지게 됩니다<span lang=EN-US>. </span>즉<span
lang=EN-US>, </span>실행 중 동적으로 프래그먼트가 교체되어야 합니다<span lang=EN-US>. </span>그러니까 레이아웃에도<span
lang=EN-US> container</span>만 두고 실제 프래그먼트를 넣어주는 일은 자바 코드에서 해야 합니다<span
lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="그림_x0020_57"
 o:spid="_x0000_i1029" type="#_x0000_t75" style='width:658.5pt;height:201pt;
 visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image066.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img border=0 width=878 height=268
src="제5주_프래그먼트.files/image066.png" v:shapes="그림_x0020_57"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><span style='mso-spacerun:yes'>&nbsp;</span><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'>/res/layout-large </span><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>디렉토리를 만들고 그 아래에 같은 이름의 레이아웃 파일을 아래 그림과 같이 작성합니다<span
lang=EN-US>. </span>큰 화면 기기를 위한 레이아웃입니다<span lang=EN-US>. </span>큰 기기의 경우 목록과 가사가
한 화면에 나란히 보여줄 것이므로 프로그먼트 두 개를 고정적으로 나란히 배치하면 됩니다<span lang=EN-US>. </span>실행 중에
동적으로 바꿔줄 일이 없기 때문입니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="그림_x0020_58"
 o:spid="_x0000_i1028" type="#_x0000_t75" style='width:669pt;height:394.5pt;
 visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image067.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img border=0 width=892 height=526
src="제5주_프래그먼트.files/image067.png" v:shapes="그림_x0020_58"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'>MainActivity</span><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>가 중요합니다<span lang=EN-US>. Fragment</span>를 동적으로 관리하는 일을
액티비티가 주관해야 하기 때문입니다<span lang=EN-US>. <o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>액티비티의<span lang=EN-US> onCreate </span>메소드에서는 큰 화면과 작은
화면일 때 할 일이 다릅니다<span lang=EN-US>. </span>큰 화면의 경우에는 두 프래그먼트들이 처음부터 고정되어있으므로 아무 일도
하지 않습니다<span lang=EN-US>. </span>작은 화면일 때는<span lang=EN-US> TitlesFragment</span>를
하나 만들어<span lang=EN-US> fragment_container</span>에 넣어 주어야 합니다<span lang=EN-US>.
</span>단<span lang=EN-US>, </span>처음 만들어질 때만 넣어 주어야 합니다<span lang=EN-US>. </span>파괴됐다가
다시 만들어질 때는 그렇게 하지 말아야 합니다<span lang=EN-US>. </span>아래 주석을 잘 읽어 보세요<span
lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="그림_x0020_65"
 o:spid="_x0000_i1027" type="#_x0000_t75" style='width:490.5pt;height:405pt;
 visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image068.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img border=0 width=654 height=540
src="제5주_프래그먼트.files/image068.png" v:shapes="그림_x0020_65"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>노래 가사를 갱신하는 일도 조금 복잡합니다<span lang=EN-US>. </span>큰 화면일
때는 단순히<span lang=EN-US> LyricsFragment</span>에게 갱신을 지시하면 됩니다<span lang=EN-US>. </span>그러나
작은 화면일 때는 프래그먼트를 교체하고 새 프래그먼트에게 가사를 보여주도록 지시해야 합니다<span lang=EN-US>. </span>여기에서
한 가지 주의할 게 있습니다<span lang=EN-US>. </span>프래그먼트 트랜잭션을 이용해 새 프래그먼트를 만드는 문장을 적고 바로
그 아래에 새로 만들어진 프래그먼트에게 메소드를 호출하는 문장을 적으면 안 됩니다<span lang=EN-US>. </span>프래그먼트 트랜잭션은
비동기 방식으로 작동합니다<span lang=EN-US>. </span>런타임에 프래그먼트 트랜잭션 문장은 바로 리턴되어 그 다음 문장으로 넘어가지만
프래그먼트 트랜잭션은 아직 완료되지 않은 상태입니다<span lang=EN-US>. <o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>그럼 우리는 새로 만들어지는 프래그먼트에게 노래 가사를 출력하도록 해야 하는데 어떻게 하면 될까요<span
lang=EN-US>? </span>새로 만들어지는 프래그먼트는 나름대로의 라이프사이클을 따라 작동합니다<span lang=EN-US>.
onCreateView</span>에서 레이아웃을 부풀려<span lang=EN-US> View</span>를 만들 것입니다<span
lang=EN-US>. </span>그 이후<span lang=EN-US> onStart</span>에서 가사를 스스로 출력하도록<span
lang=EN-US> LyricsFragment</span>를 작성하면 됩니다<span lang=EN-US>. </span>그런데 가사를 출력하려면
노래 번호를 알아야 합니다<span lang=EN-US>. </span>이를 위해<span lang=EN-US> LyricsFragment</span>를
새로 만들면서 새로 만들어지는 프래그먼트에게 인자를 붙여 줍니다<span lang=EN-US>. </span>이 인자는 자바<span
lang=EN-US> main </span>메소드의 <span lang=EN-US>String[] args</span>와 비슷한 용도로 사용됩니다<span
lang=EN-US>. </span>프로그램을 시작하면서 명령줄 인자를 넘겨주는데 사용하는 것과 비슷합니다<span lang=EN-US>. </span>프래그먼트
인자는 번들에 넣어 붙여 줍니다<span lang=EN-US>. </span>이 번들은<span lang=EN-US>
InstanceStateBundle</span>과는 별개의 것입니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>프래그먼트 트랜잭션을 백스택에 넣는 것은 뒤로 가기를 지원하기 위해서입니다<span
lang=EN-US>. </span>뒤로 가기 버튼이 눌리면 백스택에 있는 트랜잭션이 역동작으로 수행됩니다<span lang=EN-US>. </span>그러니까
화면에 보이는<span lang=EN-US> LyricsFragment</span>가 원래의 목록 화면으로 교체됩니다<span
lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="그림_x0020_66"
 o:spid="_x0000_i1026" type="#_x0000_t75" style='width:449.25pt;height:457.5pt;
 visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image069.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img border=0 width=599 height=610
src="제5주_프래그먼트.files/image069.png" v:shapes="그림_x0020_66"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'>LyricsFragment</span><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>도 위 수정에 맞춰 조금 수정해야 합니다<span lang=EN-US>. </span>인자를 꺼내어
그에 맞는 가사를 출력하도록 해야 합니다<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%;mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="그림_x0020_67"
 o:spid="_x0000_i1025" type="#_x0000_t75" style='width:449.25pt;height:256.5pt;
 visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="제5주_프래그먼트.files/image070.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img border=0 width=599 height=342
src="제5주_프래그먼트.files/image070.png" v:shapes="그림_x0020_67"><![endif]></span><span
lang=EN-US style='mso-bidi-font-size:10.0pt;line-height:150%'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'>mPosition</span><span style='mso-bidi-font-size:10.0pt;
line-height:150%'>은 초기에<span lang=EN-US> -1</span>로 설정되어 있습니다<span lang=EN-US>.
</span>이 값이<span lang=EN-US> -1</span>일 때는 가사 화면에 아무 것도 보이지 않습니다<span
lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'>TitlesFragment</span><span style='mso-bidi-font-size:
10.0pt;line-height:150%'>는 달라질 것이 없습니다<span lang=EN-US>. <o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:10.0pt;text-indent:-10.0pt;mso-char-indent-count:
-1.0;line-height:150%'><span lang=EN-US style='mso-bidi-font-size:10.0pt;
line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US style='mso-bidi-font-size:
10.0pt;line-height:150%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:150%'><span style='mso-bidi-font-size:
10.0pt;line-height:150%;background:white'>끝<span lang=EN-US>.<o:p></o:p></span></span></p>

</div>

</body>

</html>
